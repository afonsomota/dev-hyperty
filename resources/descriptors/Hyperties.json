{
  "HypertyConnector": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "HypertyConnector",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10001,
    "type": "Hyperties",
    "version": "0.1",
    "description": "Description of HypertyConnector",
    "objectName": "HypertyConnector",
    "configuration": {},
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  },
  "HelloWorldObserver": {
    "sourcePackage": {
      "sourceCode": "KGZ1bmN0aW9uKGYpe2lmKHR5cGVvZiBleHBvcnRzPT09Im9iamVjdCImJnR5cGVvZiBtb2R1bGUhPT0idW5kZWZpbmVkIil7bW9kdWxlLmV4cG9ydHM9ZigpfWVsc2UgaWYodHlwZW9mIGRlZmluZT09PSJmdW5jdGlvbiImJmRlZmluZS5hbWQpe2RlZmluZShbXSxmKX1lbHNle3ZhciBnO2lmKHR5cGVvZiB3aW5kb3chPT0idW5kZWZpbmVkIil7Zz13aW5kb3d9ZWxzZSBpZih0eXBlb2YgZ2xvYmFsIT09InVuZGVmaW5lZCIpe2c9Z2xvYmFsfWVsc2UgaWYodHlwZW9mIHNlbGYhPT0idW5kZWZpbmVkIil7Zz1zZWxmfWVsc2V7Zz10aGlzfWcuYWN0aXZhdGUgPSBmKCl9fSkoZnVuY3Rpb24oKXt2YXIgZGVmaW5lLG1vZHVsZSxleHBvcnRzO3JldHVybiAoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PSJmdW5jdGlvbiImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoIkNhbm5vdCBmaW5kIG1vZHVsZSAnIitvKyInIik7dGhyb3cgZi5jb2RlPSJNT0RVTEVfTk9UX0ZPVU5EIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PSJmdW5jdGlvbiImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pKHsxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKJ3VzZSBzdHJpY3QnOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwoKdmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmICgidmFsdWUiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7CgpleHBvcnRzLmRlZmF1bHQgPSBhY3RpdmF0ZTsKCnZhciBfU3luY2hlciA9IHJlcXVpcmUoJ3NlcnZpY2UtZnJhbWV3b3JrL2Rpc3QvU3luY2hlcicpOwoKdmFyIF91dGlscyA9IHJlcXVpcmUoJy4uLy4uL3Jlc291cmNlcy91dGlscy91dGlscycpOwoKdmFyIF9FdmVudEVtaXR0ZXIyID0gcmVxdWlyZSgnLi4vLi4vcmVzb3VyY2VzL3V0aWxzL0V2ZW50RW1pdHRlcicpOwoKdmFyIF9FdmVudEVtaXR0ZXIzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfRXZlbnRFbWl0dGVyMik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfQoKZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsgfSB9CgpmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gIm9iamVjdCIgfHwgdHlwZW9mIGNhbGwgPT09ICJmdW5jdGlvbiIpID8gY2FsbCA6IHNlbGY7IH0KCmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09ICJmdW5jdGlvbiIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90ICIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9IC8qIGpzaGludCB1bmRlZjogdHJ1ZSAqLwoKLyoqDQoqIEhlbGxvIFdvcmxkIE9ic2VydmVyDQoqIEBhdXRob3IgUGF1bG8gQ2hhaW5obyBbcGF1bG8tZy1jaGFpbmhvQHRlbGVjb20ucHRdDQoqIEB2ZXJzaW9uIDAuMS4wDQoqLwoKdmFyIEhlbGxvV29ybGRPYnNlcnZlciA9IGZ1bmN0aW9uIChfRXZlbnRFbWl0dGVyKSB7CiAgX2luaGVyaXRzKEhlbGxvV29ybGRPYnNlcnZlciwgX0V2ZW50RW1pdHRlcik7CgogIC8qKg0KICAqIENyZWF0ZSBhIG5ldyBIZWxsb1dvcmxkT2JzZXJ2ZXINCiAgKiBAcGFyYW0gIHtTeW5jaGVyfSBzeW5jaGVyIC0gU3luY2hlciBwcm92aWRlZCBmcm9tIHRoZSBydW50aW1lIGNvcmUNCiAgKi8KCiAgZnVuY3Rpb24gSGVsbG9Xb3JsZE9ic2VydmVyKGh5cGVydHlVUkwsIGJ1cywgY29uZmlndXJhdGlvbikgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEhlbGxvV29ybGRPYnNlcnZlcik7CgogICAgaWYgKCFoeXBlcnR5VVJMKSB0aHJvdyBuZXcgRXJyb3IoJ1RoZSBoeXBlcnR5VVJMIGlzIGEgbmVlZGVkIHBhcmFtZXRlcicpOwogICAgaWYgKCFidXMpIHRocm93IG5ldyBFcnJvcignVGhlIE1pbmlCdXMgaXMgYSBuZWVkZWQgcGFyYW1ldGVyJyk7CiAgICBpZiAoIWNvbmZpZ3VyYXRpb24pIHRocm93IG5ldyBFcnJvcignVGhlIGNvbmZpZ3VyYXRpb24gaXMgYSBuZWVkZWQgcGFyYW1ldGVyJyk7CgogICAgdmFyIF90aGlzMiA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIE9iamVjdC5nZXRQcm90b3R5cGVPZihIZWxsb1dvcmxkT2JzZXJ2ZXIpLmNhbGwodGhpcykpOwoKICAgIHZhciBfdGhpcyA9IF90aGlzMjsKICAgIF90aGlzLl9kb21haW4gPSAoMCwgX3V0aWxzLmRpdmlkZVVSTCkoaHlwZXJ0eVVSTCkuZG9tYWluOwoKICAgIF90aGlzLl9vYmplY3REZXNjVVJMID0gJ2h5cGVydHktY2F0YWxvZ3VlOi8vJyArIF90aGlzLl9kb21haW4gKyAnLy53ZWxsLWtub3duL2RhdGFzY2hlbWFzL0hlbGxvV29ybGREYXRhU2NoZW1hJzsKCiAgICB2YXIgZG9tYWluID0gKDAsIF91dGlscy5kaXZpZGVVUkwpKGh5cGVydHlVUkwpLmRvbWFpbjsKCiAgICB2YXIgc3luY2hlciA9IG5ldyBfU3luY2hlci5TeW5jaGVyKGh5cGVydHlVUkwsIGJ1cywgY29uZmlndXJhdGlvbik7CiAgICBzeW5jaGVyLm9uTm90aWZpY2F0aW9uKGZ1bmN0aW9uIChldmVudCkgewogICAgICBfdGhpcy5fb25Ob3RpZmljYXRpb24oZXZlbnQpOwogICAgfSk7CgogICAgX3RoaXMuX3N5bmNoZXIgPSBzeW5jaGVyOwogICAgcmV0dXJuIF90aGlzMjsKICB9CgogIF9jcmVhdGVDbGFzcyhIZWxsb1dvcmxkT2JzZXJ2ZXIsIFt7CiAgICBrZXk6ICdfb25Ob3RpZmljYXRpb24nLAogICAgdmFsdWU6IGZ1bmN0aW9uIF9vbk5vdGlmaWNhdGlvbihldmVudCkgewoKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGNvbnNvbGUuaW5mbygnRXZlbnQgUmVjZWl2ZWQ6ICcsIGV2ZW50KTsKCiAgICAgIF90aGlzLnRyaWdnZXIoJ2ludml0YXRpb24nLCBldmVudC5pZGVudGl0eSk7CgogICAgICAvLyBBY2tub3dsZWRnZSByZXBvcnRlciBhYm91dCB0aGUgSW52aXRhdGlvbiB3YXMgcmVjZWl2ZWQKICAgICAgZXZlbnQuYWNrKCk7CgogICAgICAvLyBTdWJzY3JpYmUgSGVsbG8gV29ybGQgT2JqZWN0CiAgICAgIF90aGlzLl9zeW5jaGVyLnN1YnNjcmliZShfdGhpcy5fb2JqZWN0RGVzY1VSTCwgZXZlbnQudXJsKS50aGVuKGZ1bmN0aW9uIChoZWxsb09ianRPYnNlcnZlcikgewoKICAgICAgICAvLyBIZWxsbyBXb3JsZCBPYmplY3Qgd2FzIHN1YnNjcmliZWQKICAgICAgICBjb25zb2xlLmluZm8oaGVsbG9PYmp0T2JzZXJ2ZXIpOwoKICAgICAgICAvLyBsZXRzIG5vdGlmeSB0aGUgQXBwIHRoZSBzdWJzY3JpcHRpb24gd2FzIGFjY2VwdGVkIHdpdGggdGhlIG1ub3N0IHVwZGF0ZWQgdmVyc2lvbiBvZiBIZWxsbyBXb3JsZCBPYmplY3QKCiAgICAgICAgX3RoaXMudHJpZ2dlcignaGVsbG8nLCBoZWxsb09ianRPYnNlcnZlci5kYXRhKTsKCiAgICAgICAgLy8gbGV0cyBub3cgb2JzZXJ2ZSBhbnkgY2hhbmdlcyBkb25lIGluIEhlbGxvIFdvcmxkIE9iamVjdAoKICAgICAgICBoZWxsb09ianRPYnNlcnZlci5vbkNoYW5nZSgnKicsIGZ1bmN0aW9uIChldmVudCkgewoKICAgICAgICAgIC8vIEhlbGxvIFdvcmxkIE9iamVjdCB3YXMgY2hhbmdlZAogICAgICAgICAgY29uc29sZS5pbmZvKCdtZXNzYWdlIHJlY2VpdmVkOicsIGV2ZW50KTsKCiAgICAgICAgICAvLyBsZXRzIG5vdGlmeSB0aGUgQXBwIGFib3V0IHRoZSBjaGFuZ2UKICAgICAgICAgIF90aGlzLnRyaWdnZXIoJ2hlbGxvJywgaGVsbG9PYmp0T2JzZXJ2ZXIuZGF0YSk7CiAgICAgICAgfSk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChyZWFzb24pIHsKICAgICAgICBjb25zb2xlLmVycm9yKHJlYXNvbik7CiAgICAgIH0pOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIEhlbGxvV29ybGRPYnNlcnZlcjsKfShfRXZlbnRFbWl0dGVyMy5kZWZhdWx0KTsKCmZ1bmN0aW9uIGFjdGl2YXRlKGh5cGVydHlVUkwsIGJ1cywgY29uZmlndXJhdGlvbikgewoKICByZXR1cm4gewogICAgbmFtZTogJ0hlbGxvV29ybGRPYnNlcnZlcicsCiAgICBpbnN0YW5jZTogbmV3IEhlbGxvV29ybGRPYnNlcnZlcihoeXBlcnR5VVJMLCBidXMsIGNvbmZpZ3VyYXRpb24pCiAgfTsKfQptb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsKCn0seyIuLi8uLi9yZXNvdXJjZXMvdXRpbHMvRXZlbnRFbWl0dGVyIjozLCIuLi8uLi9yZXNvdXJjZXMvdXRpbHMvdXRpbHMiOjQsInNlcnZpY2UtZnJhbWV3b3JrL2Rpc3QvU3luY2hlciI6Mn1dLDI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewooZnVuY3Rpb24gKGdsb2JhbCl7Ci8qKg0KKiBDb3B5cmlnaHQgMjAxNiBQVCBJbm92YcOnw6NvIGUgU2lzdGVtYXMgU0ENCiogQ29weXJpZ2h0IDIwMTYgSU5FU0MtSUQNCiogQ29weXJpZ2h0IDIwMTYgUVVPQklTIE5FVFdPUktTIFNMDQoqIENvcHlyaWdodCAyMDE2IEZSQVVOSE9GRVItR0VTRUxMU0NIQUZUIFpVUiBGT0VSREVSVU5HIERFUiBBTkdFV0FORFRFTiBGT1JTQ0hVTkcgRS5WDQoqIENvcHlyaWdodCAyMDE2IE9SQU5HRSBTQQ0KKiBDb3B5cmlnaHQgMjAxNiBEZXV0c2NoZSBUZWxla29tIEFHDQoqIENvcHlyaWdodCAyMDE2IEFwaXplZQ0KKiBDb3B5cmlnaHQgMjAxNiBURUNITklTQ0hFIFVOSVZFUlNJVEFUIEJFUkxJTg0KKg0KKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsNCiogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLg0KKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQNCioNCiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjANCioNCiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQ0KKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLA0KKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4NCiogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZA0KKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4NCioqLw0KDQovLyBEaXN0cmlidXRpb24gZmlsZSBmb3IgU3luY2hlci5qcyANCi8vIHZlcnNpb246IDAuMi4wDQoNCiFmdW5jdGlvbihlKXtpZigib2JqZWN0Ij09dHlwZW9mIGV4cG9ydHMmJiJ1bmRlZmluZWQiIT10eXBlb2YgbW9kdWxlKW1vZHVsZS5leHBvcnRzPWUoKTtlbHNlIGlmKCJmdW5jdGlvbiI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQpZGVmaW5lKFtdLGUpO2Vsc2V7dmFyIHQ7dD0idW5kZWZpbmVkIiE9dHlwZW9mIHdpbmRvdz93aW5kb3c6InVuZGVmaW5lZCIhPXR5cGVvZiBnbG9iYWw/Z2xvYmFsOiJ1bmRlZmluZWQiIT10eXBlb2Ygc2VsZj9zZWxmOnRoaXMsdC5TeW5jaGVyPWUoKX19KGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uIGUodCxyLG4pe2Z1bmN0aW9uIG8ocyxjKXtpZighcltzXSl7aWYoIXRbc10pe3ZhciBhPSJmdW5jdGlvbiI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFjJiZhKXJldHVybiBhKHMsITApO2lmKGkpcmV0dXJuIGkocywhMCk7dmFyIHU9bmV3IEVycm9yKCJDYW5ub3QgZmluZCBtb2R1bGUgJyIrcysiJyIpO3Rocm93IHUuY29kZT0iTU9EVUxFX05PVF9GT1VORCIsdX12YXIgbD1yW3NdPXtleHBvcnRzOnt9fTt0W3NdWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciByPXRbc11bMV1bZV07cmV0dXJuIG8ocj9yOmUpfSxsLGwuZXhwb3J0cyxlLHQscixuKX1yZXR1cm4gcltzXS5leHBvcnRzfWZvcih2YXIgaT0iZnVuY3Rpb24iPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxzPTA7czxuLmxlbmd0aDtzKyspbyhuW3NdKTtyZXR1cm4gb30oezE6W2Z1bmN0aW9uKGUsdCxyKXtPYmplY3Qub2JzZXJ2ZSYmIUFycmF5Lm9ic2VydmUmJmZ1bmN0aW9uKGUsdCl7InVzZSBzdHJpY3QiO3ZhciByPWUuZ2V0Tm90aWZpZXIsbj0icGVyZm9ybUNoYW5nZSIsbz0iX29yaWdpbmFsIixpPSJzcGxpY2UiLHM9e3B1c2g6ZnVuY3Rpb24gYShlKXt2YXIgdD1hcmd1bWVudHMscz1hW29dLmFwcGx5KHRoaXMsdCk7cmV0dXJuIHIodGhpcylbbl0oaSxmdW5jdGlvbigpe3JldHVybntpbmRleDpzLXQubGVuZ3RoLGFkZGVkQ291bnQ6dC5sZW5ndGgscmVtb3ZlZDpbXX19KSxzfSx1bnNoaWZ0OmZ1bmN0aW9uIHUoZSl7dmFyIHQ9YXJndW1lbnRzLHM9dVtvXS5hcHBseSh0aGlzLHQpO3JldHVybiByKHRoaXMpW25dKGksZnVuY3Rpb24oKXtyZXR1cm57aW5kZXg6MCxhZGRlZENvdW50OnQubGVuZ3RoLHJlbW92ZWQ6W119fSksc30scG9wOmZ1bmN0aW9uIGwoKXt2YXIgZT10aGlzLmxlbmd0aCx0PWxbb10uY2FsbCh0aGlzKTtyZXR1cm4gdGhpcy5sZW5ndGghPT1lJiZyKHRoaXMpW25dKGksZnVuY3Rpb24oKXtyZXR1cm57aW5kZXg6dGhpcy5sZW5ndGgsYWRkZWRDb3VudDowLHJlbW92ZWQ6W3RdfX0sdGhpcyksdH0sc2hpZnQ6ZnVuY3Rpb24gZigpe3ZhciBlPXRoaXMubGVuZ3RoLHQ9ZltvXS5jYWxsKHRoaXMpO3JldHVybiB0aGlzLmxlbmd0aCE9PWUmJnIodGhpcylbbl0oaSxmdW5jdGlvbigpe3JldHVybntpbmRleDowLGFkZGVkQ291bnQ6MCxyZW1vdmVkOlt0XX19LHRoaXMpLHR9LHNwbGljZTpmdW5jdGlvbiBkKGUsdCl7dmFyIHM9YXJndW1lbnRzLGM9ZFtvXS5hcHBseSh0aGlzLHMpO3JldHVybihjLmxlbmd0aHx8cy5sZW5ndGg+MikmJnIodGhpcylbbl0oaSxmdW5jdGlvbigpe3JldHVybntpbmRleDplLGFkZGVkQ291bnQ6cy5sZW5ndGgtMixyZW1vdmVkOmN9fSx0aGlzKSxjfX07Zm9yKHZhciBjIGluIHMpc1tjXVtvXT10LnByb3RvdHlwZVtjXSx0LnByb3RvdHlwZVtjXT1zW2NdO3Qub2JzZXJ2ZT1mdW5jdGlvbih0LHIpe3JldHVybiBlLm9ic2VydmUodCxyLFsiYWRkIiwidXBkYXRlIiwiZGVsZXRlIixpXSl9LHQudW5vYnNlcnZlPWUudW5vYnNlcnZlfShPYmplY3QsQXJyYXkpfSx7fV0sMjpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17ImRlZmF1bHQiOmUoImNvcmUtanMvbGlicmFyeS9mbi9qc29uL3N0cmluZ2lmeSIpLF9fZXNNb2R1bGU6ITB9fSx7ImNvcmUtanMvbGlicmFyeS9mbi9qc29uL3N0cmluZ2lmeSI6MTh9XSwzOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9jcmVhdGUiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2NyZWF0ZSI6MTl9XSw0OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9kZWZpbmUtcHJvcGVydHkiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2RlZmluZS1wcm9wZXJ0eSI6MjB9XSw1OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2dldC1vd24tcHJvcGVydHktZGVzY3JpcHRvciI6MjF9XSw2OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9nZXQtcHJvdG90eXBlLW9mIiksX19lc01vZHVsZTohMH19LHsiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9nZXQtcHJvdG90eXBlLW9mIjoyMn1dLDc6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9eyJkZWZhdWx0IjplKCJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2tleXMiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2tleXMiOjIzfV0sODpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17ImRlZmF1bHQiOmUoImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3Qvc2V0LXByb3RvdHlwZS1vZiIpLF9fZXNNb2R1bGU6ITB9fSx7ImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3Qvc2V0LXByb3RvdHlwZS1vZiI6MjR9XSw5OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL3Byb21pc2UiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vcHJvbWlzZSI6MjV9XSwxMDpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17ImRlZmF1bHQiOmUoImNvcmUtanMvbGlicmFyeS9mbi9zeW1ib2wiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vc3ltYm9sIjoyNn1dLDExOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL3N5bWJvbC9pdGVyYXRvciIpLF9fZXNNb2R1bGU6ITB9fSx7ImNvcmUtanMvbGlicmFyeS9mbi9zeW1ib2wvaXRlcmF0b3IiOjI3fV0sMTI6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ci5fX2VzTW9kdWxlPSEwLHJbImRlZmF1bHQiXT1mdW5jdGlvbihlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpfX0se31dLDEzOltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOnsiZGVmYXVsdCI6ZX19ci5fX2VzTW9kdWxlPSEwO3ZhciBvPWUoImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvZGVmaW5lLXByb3BlcnR5IiksaT1uKG8pO3JbImRlZmF1bHQiXT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0KXtmb3IodmFyIHI9MDtyPHQubGVuZ3RoO3IrKyl7dmFyIG49dFtyXTtuLmVudW1lcmFibGU9bi5lbnVtZXJhYmxlfHwhMSxuLmNvbmZpZ3VyYWJsZT0hMCwidmFsdWUiaW4gbiYmKG4ud3JpdGFibGU9ITApLCgwLGlbImRlZmF1bHQiXSkoZSxuLmtleSxuKX19cmV0dXJuIGZ1bmN0aW9uKHQscixuKXtyZXR1cm4gciYmZSh0LnByb3RvdHlwZSxyKSxuJiZlKHQsbiksdH19KCl9LHsiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9kZWZpbmUtcHJvcGVydHkiOjR9XSwxNDpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fXIuX19lc01vZHVsZT0hMDt2YXIgbz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2dldC1wcm90b3R5cGUtb2YiKSxpPW4obykscz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2dldC1vd24tcHJvcGVydHktZGVzY3JpcHRvciIpLGM9bihzKTtyWyJkZWZhdWx0Il09ZnVuY3Rpb24gYShlLHQscil7bnVsbD09PWUmJihlPUZ1bmN0aW9uLnByb3RvdHlwZSk7dmFyIG49KDAsY1siZGVmYXVsdCJdKShlLHQpO2lmKHZvaWQgMD09PW4pe3ZhciBvPSgwLGlbImRlZmF1bHQiXSkoZSk7cmV0dXJuIG51bGw9PT1vP3ZvaWQgMDphKG8sdCxyKX1pZigidmFsdWUiaW4gbilyZXR1cm4gbi52YWx1ZTt2YXIgcz1uLmdldDtpZih2b2lkIDAhPT1zKXJldHVybiBzLmNhbGwocil9fSx7ImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yIjo1LCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2dldC1wcm90b3R5cGUtb2YiOjZ9XSwxNTpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fXIuX19lc01vZHVsZT0hMDt2YXIgbz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L3NldC1wcm90b3R5cGUtb2YiKSxpPW4obykscz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2NyZWF0ZSIpLGM9bihzKSxhPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy90eXBlb2YiKSx1PW4oYSk7clsiZGVmYXVsdCJdPWZ1bmN0aW9uKGUsdCl7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIHQmJm51bGwhPT10KXRocm93IG5ldyBUeXBlRXJyb3IoIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgIisoInVuZGVmaW5lZCI9PXR5cGVvZiB0PyJ1bmRlZmluZWQiOigwLHVbImRlZmF1bHQiXSkodCkpKTtlLnByb3RvdHlwZT0oMCxjWyJkZWZhdWx0Il0pKHQmJnQucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6ZSxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSx0JiYoaVsiZGVmYXVsdCJdPygwLGlbImRlZmF1bHQiXSkoZSx0KTplLl9fcHJvdG9fXz10KX19LHsiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9jcmVhdGUiOjMsImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3Qvc2V0LXByb3RvdHlwZS1vZiI6OCwiYmFiZWwtcnVudGltZS9oZWxwZXJzL3R5cGVvZiI6MTd9XSwxNjpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fXIuX19lc01vZHVsZT0hMDt2YXIgbz1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvdHlwZW9mIiksaT1uKG8pO3JbImRlZmF1bHQiXT1mdW5jdGlvbihlLHQpe2lmKCFlKXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7cmV0dXJuIXR8fCJvYmplY3QiIT09KCJ1bmRlZmluZWQiPT10eXBlb2YgdD8idW5kZWZpbmVkIjooMCxpWyJkZWZhdWx0Il0pKHQpKSYmImZ1bmN0aW9uIiE9dHlwZW9mIHQ/ZTp0fX0seyJiYWJlbC1ydW50aW1lL2hlbHBlcnMvdHlwZW9mIjoxN31dLDE3OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOnsiZGVmYXVsdCI6ZX19ci5fX2VzTW9kdWxlPSEwO3ZhciBvPWUoImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9zeW1ib2wvaXRlcmF0b3IiKSxpPW4obykscz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvc3ltYm9sIiksYz1uKHMpLGE9ImZ1bmN0aW9uIj09dHlwZW9mIGNbImRlZmF1bHQiXSYmInN5bWJvbCI9PXR5cGVvZiBpWyJkZWZhdWx0Il0/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmImZ1bmN0aW9uIj09dHlwZW9mIGNbImRlZmF1bHQiXSYmZS5jb25zdHJ1Y3Rvcj09PWNbImRlZmF1bHQiXT8ic3ltYm9sIjp0eXBlb2YgZX07clsiZGVmYXVsdCJdPSJmdW5jdGlvbiI9PXR5cGVvZiBjWyJkZWZhdWx0Il0mJiJzeW1ib2wiPT09YShpWyJkZWZhdWx0Il0pP2Z1bmN0aW9uKGUpe3JldHVybiJ1bmRlZmluZWQiPT10eXBlb2YgZT8idW5kZWZpbmVkIjphKGUpfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmImZ1bmN0aW9uIj09dHlwZW9mIGNbImRlZmF1bHQiXSYmZS5jb25zdHJ1Y3Rvcj09PWNbImRlZmF1bHQiXT8ic3ltYm9sIjoidW5kZWZpbmVkIj09dHlwZW9mIGU/InVuZGVmaW5lZCI6YShlKX19LHsiYmFiZWwtcnVudGltZS9jb3JlLWpzL3N5bWJvbCI6MTAsImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9zeW1ib2wvaXRlcmF0b3IiOjExfV0sMTg6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuLi8uLi9tb2R1bGVzL19jb3JlIiksbz1uLkpTT058fChuLkpTT049e3N0cmluZ2lmeTpKU09OLnN0cmluZ2lmeX0pO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gby5zdHJpbmdpZnkuYXBwbHkobyxhcmd1bWVudHMpfX0seyIuLi8uLi9tb2R1bGVzL19jb3JlIjozNX1dLDE5OltmdW5jdGlvbihlLHQscil7ZSgiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmNyZWF0ZSIpO3ZhciBuPWUoIi4uLy4uL21vZHVsZXMvX2NvcmUiKS5PYmplY3Q7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIG4uY3JlYXRlKGUsdCl9fSx7Ii4uLy4uL21vZHVsZXMvX2NvcmUiOjM1LCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuY3JlYXRlIjoxMDB9XSwyMDpbZnVuY3Rpb24oZSx0LHIpe2UoIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5kZWZpbmUtcHJvcGVydHkiKTt2YXIgbj1lKCIuLi8uLi9tb2R1bGVzL19jb3JlIikuT2JqZWN0O3QuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7cmV0dXJuIG4uZGVmaW5lUHJvcGVydHkoZSx0LHIpfX0seyIuLi8uLi9tb2R1bGVzL19jb3JlIjozNSwiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0eSI6MTAxfV0sMjE6W2Z1bmN0aW9uKGUsdCxyKXtlKCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yIik7dmFyIG49ZSgiLi4vLi4vbW9kdWxlcy9fY29yZSIpLk9iamVjdDt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbi5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSx0KX19LHsiLi4vLi4vbW9kdWxlcy9fY29yZSI6MzUsIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IiOjEwMn1dLDIyOltmdW5jdGlvbihlLHQscil7ZSgiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmdldC1wcm90b3R5cGUtb2YiKSx0LmV4cG9ydHM9ZSgiLi4vLi4vbW9kdWxlcy9fY29yZSIpLk9iamVjdC5nZXRQcm90b3R5cGVPZn0seyIuLi8uLi9tb2R1bGVzL19jb3JlIjozNSwiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmdldC1wcm90b3R5cGUtb2YiOjEwM31dLDIzOltmdW5jdGlvbihlLHQscil7ZSgiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmtleXMiKSx0LmV4cG9ydHM9ZSgiLi4vLi4vbW9kdWxlcy9fY29yZSIpLk9iamVjdC5rZXlzfSx7Ii4uLy4uL21vZHVsZXMvX2NvcmUiOjM1LCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3Qua2V5cyI6MTA0fV0sMjQ6W2Z1bmN0aW9uKGUsdCxyKXtlKCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3Quc2V0LXByb3RvdHlwZS1vZiIpLHQuZXhwb3J0cz1lKCIuLi8uLi9tb2R1bGVzL19jb3JlIikuT2JqZWN0LnNldFByb3RvdHlwZU9mfSx7Ii4uLy4uL21vZHVsZXMvX2NvcmUiOjM1LCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3Quc2V0LXByb3RvdHlwZS1vZiI6MTA1fV0sMjU6W2Z1bmN0aW9uKGUsdCxyKXtlKCIuLi9tb2R1bGVzL2VzNi5vYmplY3QudG8tc3RyaW5nIiksZSgiLi4vbW9kdWxlcy9lczYuc3RyaW5nLml0ZXJhdG9yIiksZSgiLi4vbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlIiksZSgiLi4vbW9kdWxlcy9lczYucHJvbWlzZSIpLHQuZXhwb3J0cz1lKCIuLi9tb2R1bGVzL19jb3JlIikuUHJvbWlzZX0seyIuLi9tb2R1bGVzL19jb3JlIjozNSwiLi4vbW9kdWxlcy9lczYub2JqZWN0LnRvLXN0cmluZyI6MTA2LCIuLi9tb2R1bGVzL2VzNi5wcm9taXNlIjoxMDcsIi4uL21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvciI6MTA4LCIuLi9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUiOjExMn1dLDI2OltmdW5jdGlvbihlLHQscil7ZSgiLi4vLi4vbW9kdWxlcy9lczYuc3ltYm9sIiksZSgiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LnRvLXN0cmluZyIpLGUoIi4uLy4uL21vZHVsZXMvZXM3LnN5bWJvbC5hc3luYy1pdGVyYXRvciIpLGUoIi4uLy4uL21vZHVsZXMvZXM3LnN5bWJvbC5vYnNlcnZhYmxlIiksdC5leHBvcnRzPWUoIi4uLy4uL21vZHVsZXMvX2NvcmUiKS5TeW1ib2x9LHsiLi4vLi4vbW9kdWxlcy9fY29yZSI6MzUsIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC50by1zdHJpbmciOjEwNiwiLi4vLi4vbW9kdWxlcy9lczYuc3ltYm9sIjoxMDksIi4uLy4uL21vZHVsZXMvZXM3LnN5bWJvbC5hc3luYy1pdGVyYXRvciI6MTEwLCIuLi8uLi9tb2R1bGVzL2VzNy5zeW1ib2wub2JzZXJ2YWJsZSI6MTExfV0sMjc6W2Z1bmN0aW9uKGUsdCxyKXtlKCIuLi8uLi9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3IiKSxlKCIuLi8uLi9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUiKSx0LmV4cG9ydHM9ZSgiLi4vLi4vbW9kdWxlcy9fd2tzLWV4dCIpLmYoIml0ZXJhdG9yIil9LHsiLi4vLi4vbW9kdWxlcy9fd2tzLWV4dCI6OTYsIi4uLy4uL21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvciI6MTA4LCIuLi8uLi9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUiOjExMn1dLDI4OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe2lmKCJmdW5jdGlvbiIhPXR5cGVvZiBlKXRocm93IFR5cGVFcnJvcihlKyIgaXMgbm90IGEgZnVuY3Rpb24hIik7cmV0dXJuIGV9fSx7fV0sMjk6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oKXt9fSx7fV0sMzA6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIsbil7aWYoIShlIGluc3RhbmNlb2YgdCl8fHZvaWQgMCE9PW4mJm4gaW4gZSl0aHJvdyBUeXBlRXJyb3IocisiOiBpbmNvcnJlY3QgaW52b2NhdGlvbiEiKTtyZXR1cm4gZX19LHt9XSwzMTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2lzLW9iamVjdCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtpZighbihlKSl0aHJvdyBUeXBlRXJyb3IoZSsiIGlzIG5vdCBhbiBvYmplY3QhIik7cmV0dXJuIGV9fSx7Ii4vX2lzLW9iamVjdCI6NTR9XSwzMjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX3RvLWlvYmplY3QiKSxvPWUoIi4vX3RvLWxlbmd0aCIpLGk9ZSgiLi9fdG8taW5kZXgiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKHQscixzKXt2YXIgYyxhPW4odCksdT1vKGEubGVuZ3RoKSxsPWkocyx1KTtpZihlJiZyIT1yKXtmb3IoO3U+bDspaWYoYz1hW2wrK10sYyE9YylyZXR1cm4hMH1lbHNlIGZvcig7dT5sO2wrKylpZigoZXx8bCBpbiBhKSYmYVtsXT09PXIpcmV0dXJuIGV8fGx8fDA7cmV0dXJuIWUmJi0xfX19LHsiLi9fdG8taW5kZXgiOjg4LCIuL190by1pb2JqZWN0Ijo5MCwiLi9fdG8tbGVuZ3RoIjo5MX1dLDMzOltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fY29mIiksbz1lKCIuL193a3MiKSgidG9TdHJpbmdUYWciKSxpPSJBcmd1bWVudHMiPT1uKGZ1bmN0aW9uKCl7cmV0dXJuIGFyZ3VtZW50c30oKSkscz1mdW5jdGlvbihlLHQpe3RyeXtyZXR1cm4gZVt0XX1jYXRjaChyKXt9fTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQscixjO3JldHVybiB2b2lkIDA9PT1lPyJVbmRlZmluZWQiOm51bGw9PT1lPyJOdWxsIjoic3RyaW5nIj09dHlwZW9mKHI9cyh0PU9iamVjdChlKSxvKSk/cjppP24odCk6Ik9iamVjdCI9PShjPW4odCkpJiYiZnVuY3Rpb24iPT10eXBlb2YgdC5jYWxsZWU/IkFyZ3VtZW50cyI6Y319LHsiLi9fY29mIjozNCwiLi9fd2tzIjo5N31dLDM0OltmdW5jdGlvbihlLHQscil7dmFyIG49e30udG9TdHJpbmc7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBuLmNhbGwoZSkuc2xpY2UoOCwtMSl9fSx7fV0sMzU6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj10LmV4cG9ydHM9e3ZlcnNpb246IjIuMy4wIn07Im51bWJlciI9PXR5cGVvZiBfX2UmJihfX2U9bil9LHt9XSwzNjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2EtZnVuY3Rpb24iKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe2lmKG4oZSksdm9pZCAwPT09dClyZXR1cm4gZTtzd2l0Y2gocil7Y2FzZSAxOnJldHVybiBmdW5jdGlvbihyKXtyZXR1cm4gZS5jYWxsKHQscil9O2Nhc2UgMjpyZXR1cm4gZnVuY3Rpb24ocixuKXtyZXR1cm4gZS5jYWxsKHQscixuKX07Y2FzZSAzOnJldHVybiBmdW5jdGlvbihyLG4sbyl7cmV0dXJuIGUuY2FsbCh0LHIsbixvKX19cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGUuYXBwbHkodCxhcmd1bWVudHMpfX19LHsiLi9fYS1mdW5jdGlvbiI6Mjh9XSwzNzpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1mdW5jdGlvbihlKXtpZih2b2lkIDA9PWUpdGhyb3cgVHlwZUVycm9yKCJDYW4ndCBjYWxsIG1ldGhvZCBvbiAgIitlKTtyZXR1cm4gZX19LHt9XSwzODpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz0hZSgiLi9fZmFpbHMiKShmdW5jdGlvbigpe3JldHVybiA3IT1PYmplY3QuZGVmaW5lUHJvcGVydHkoe30sImEiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gN319KS5hfSl9LHsiLi9fZmFpbHMiOjQzfV0sMzk6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19pcy1vYmplY3QiKSxvPWUoIi4vX2dsb2JhbCIpLmRvY3VtZW50LGk9bihvKSYmbihvLmNyZWF0ZUVsZW1lbnQpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gaT9vLmNyZWF0ZUVsZW1lbnQoZSk6e319fSx7Ii4vX2dsb2JhbCI6NDUsIi4vX2lzLW9iamVjdCI6NTR9XSw0MDpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz0iY29uc3RydWN0b3IsaGFzT3duUHJvcGVydHksaXNQcm90b3R5cGVPZixwcm9wZXJ0eUlzRW51bWVyYWJsZSx0b0xvY2FsZVN0cmluZyx0b1N0cmluZyx2YWx1ZU9mIi5zcGxpdCgiLCIpfSx7fV0sNDE6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19vYmplY3Qta2V5cyIpLG89ZSgiLi9fb2JqZWN0LWdvcHMiKSxpPWUoIi4vX29iamVjdC1waWUiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQ9bihlKSxyPW8uZjtpZihyKWZvcih2YXIgcyxjPXIoZSksYT1pLmYsdT0wO2MubGVuZ3RoPnU7KWEuY2FsbChlLHM9Y1t1KytdKSYmdC5wdXNoKHMpO3JldHVybiB0fX0seyIuL19vYmplY3QtZ29wcyI6NzEsIi4vX29iamVjdC1rZXlzIjo3NCwiLi9fb2JqZWN0LXBpZSI6NzV9XSw0MjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2dsb2JhbCIpLG89ZSgiLi9fY29yZSIpLGk9ZSgiLi9fY3R4Iikscz1lKCIuL19oaWRlIiksYz0icHJvdG90eXBlIixhPWZ1bmN0aW9uKGUsdCxyKXt2YXIgdSxsLGYsZD1lJmEuRixwPWUmYS5HLF89ZSZhLlMsYj1lJmEuUCxoPWUmYS5CLHk9ZSZhLlcsdj1wP286b1t0XXx8KG9bdF09e30pLGo9dltjXSxtPXA/bjpfP25bdF06KG5bdF18fHt9KVtjXTtwJiYocj10KTtmb3IodSBpbiByKWw9IWQmJm0mJnZvaWQgMCE9PW1bdV0sbCYmdSBpbiB2fHwoZj1sP21bdV06clt1XSx2W3VdPXAmJiJmdW5jdGlvbiIhPXR5cGVvZiBtW3VdP3JbdV06aCYmbD9pKGYsbik6eSYmbVt1XT09Zj9mdW5jdGlvbihlKXt2YXIgdD1mdW5jdGlvbih0LHIsbil7aWYodGhpcyBpbnN0YW5jZW9mIGUpe3N3aXRjaChhcmd1bWVudHMubGVuZ3RoKXtjYXNlIDA6cmV0dXJuIG5ldyBlO2Nhc2UgMTpyZXR1cm4gbmV3IGUodCk7Y2FzZSAyOnJldHVybiBuZXcgZSh0LHIpfXJldHVybiBuZXcgZSh0LHIsbil9cmV0dXJuIGUuYXBwbHkodGhpcyxhcmd1bWVudHMpfTtyZXR1cm4gdFtjXT1lW2NdLHR9KGYpOmImJiJmdW5jdGlvbiI9PXR5cGVvZiBmP2koRnVuY3Rpb24uY2FsbCxmKTpmLGImJigodi52aXJ0dWFsfHwodi52aXJ0dWFsPXt9KSlbdV09ZixlJmEuUiYmaiYmIWpbdV0mJnMoaix1LGYpKSl9O2EuRj0xLGEuRz0yLGEuUz00LGEuUD04LGEuQj0xNixhLlc9MzIsYS5VPTY0LGEuUj0xMjgsdC5leHBvcnRzPWF9LHsiLi9fY29yZSI6MzUsIi4vX2N0eCI6MzYsIi4vX2dsb2JhbCI6NDUsIi4vX2hpZGUiOjQ3fV0sNDM6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7dHJ5e3JldHVybiEhZSgpfWNhdGNoKHQpe3JldHVybiEwfX19LHt9XSw0NDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2N0eCIpLG89ZSgiLi9faXRlci1jYWxsIiksaT1lKCIuL19pcy1hcnJheS1pdGVyIikscz1lKCIuL19hbi1vYmplY3QiKSxjPWUoIi4vX3RvLWxlbmd0aCIpLGE9ZSgiLi9jb3JlLmdldC1pdGVyYXRvci1tZXRob2QiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIsdSxsKXt2YXIgZixkLHAsXz1sP2Z1bmN0aW9uKCl7cmV0dXJuIGV9OmEoZSksYj1uKHIsdSx0PzI6MSksaD0wO2lmKCJmdW5jdGlvbiIhPXR5cGVvZiBfKXRocm93IFR5cGVFcnJvcihlKyIgaXMgbm90IGl0ZXJhYmxlISIpO2lmKGkoXykpZm9yKGY9YyhlLmxlbmd0aCk7Zj5oO2grKyl0P2IocyhkPWVbaF0pWzBdLGRbMV0pOmIoZVtoXSk7ZWxzZSBmb3IocD1fLmNhbGwoZSk7IShkPXAubmV4dCgpKS5kb25lOylvKHAsYixkLnZhbHVlLHQpfX0seyIuL19hbi1vYmplY3QiOjMxLCIuL19jdHgiOjM2LCIuL19pcy1hcnJheS1pdGVyIjo1MiwiLi9faXRlci1jYWxsIjo1NSwiLi9fdG8tbGVuZ3RoIjo5MSwiLi9jb3JlLmdldC1pdGVyYXRvci1tZXRob2QiOjk4fV0sNDU6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj10LmV4cG9ydHM9InVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3cmJndpbmRvdy5NYXRoPT1NYXRoP3dpbmRvdzoidW5kZWZpbmVkIiE9dHlwZW9mIHNlbGYmJnNlbGYuTWF0aD09TWF0aD9zZWxmOkZ1bmN0aW9uKCJyZXR1cm4gdGhpcyIpKCk7Im51bWJlciI9PXR5cGVvZiBfX2cmJihfX2c9bil9LHt9XSw0NjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXt9Lmhhc093blByb3BlcnR5O3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybiBuLmNhbGwoZSx0KX19LHt9XSw0NzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX29iamVjdC1kcCIpLG89ZSgiLi9fcHJvcGVydHktZGVzYyIpO3QuZXhwb3J0cz1lKCIuL19kZXNjcmlwdG9ycyIpP2Z1bmN0aW9uKGUsdCxyKXtyZXR1cm4gbi5mKGUsdCxvKDEscikpfTpmdW5jdGlvbihlLHQscil7cmV0dXJuIGVbdF09cixlfX0seyIuL19kZXNjcmlwdG9ycyI6MzgsIi4vX29iamVjdC1kcCI6NjYsIi4vX3Byb3BlcnR5LWRlc2MiOjc3fV0sNDg6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZSgiLi9fZ2xvYmFsIikuZG9jdW1lbnQmJmRvY3VtZW50LmRvY3VtZW50RWxlbWVudH0seyIuL19nbG9iYWwiOjQ1fV0sNDk6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9IWUoIi4vX2Rlc2NyaXB0b3JzIikmJiFlKCIuL19mYWlscyIpKGZ1bmN0aW9uKCl7cmV0dXJuIDchPU9iamVjdC5kZWZpbmVQcm9wZXJ0eShlKCIuL19kb20tY3JlYXRlIikoImRpdiIpLCJhIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIDd9fSkuYX0pfSx7Ii4vX2Rlc2NyaXB0b3JzIjozOCwiLi9fZG9tLWNyZWF0ZSI6MzksIi4vX2ZhaWxzIjo0M31dLDUwOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXt2YXIgbj12b2lkIDA9PT1yO3N3aXRjaCh0Lmxlbmd0aCl7Y2FzZSAwOnJldHVybiBuP2UoKTplLmNhbGwocik7Y2FzZSAxOnJldHVybiBuP2UodFswXSk6ZS5jYWxsKHIsdFswXSk7Y2FzZSAyOnJldHVybiBuP2UodFswXSx0WzFdKTplLmNhbGwocix0WzBdLHRbMV0pO2Nhc2UgMzpyZXR1cm4gbj9lKHRbMF0sdFsxXSx0WzJdKTplLmNhbGwocix0WzBdLHRbMV0sdFsyXSk7Y2FzZSA0OnJldHVybiBuP2UodFswXSx0WzFdLHRbMl0sdFszXSk6ZS5jYWxsKHIsdFswXSx0WzFdLHRbMl0sdFszXSl9cmV0dXJuIGUuYXBwbHkocix0KX19LHt9XSw1MTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2NvZiIpO3QuZXhwb3J0cz1PYmplY3QoInoiKS5wcm9wZXJ0eUlzRW51bWVyYWJsZSgwKT9PYmplY3Q6ZnVuY3Rpb24oZSl7cmV0dXJuIlN0cmluZyI9PW4oZSk/ZS5zcGxpdCgiIik6T2JqZWN0KGUpfX0seyIuL19jb2YiOjM0fV0sNTI6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19pdGVyYXRvcnMiKSxvPWUoIi4vX3drcyIpKCJpdGVyYXRvciIpLGk9QXJyYXkucHJvdG90eXBlO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gdm9pZCAwIT09ZSYmKG4uQXJyYXk9PT1lfHxpW29dPT09ZSl9fSx7Ii4vX2l0ZXJhdG9ycyI6NjAsIi4vX3drcyI6OTd9XSw1MzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2NvZiIpO3QuZXhwb3J0cz1BcnJheS5pc0FycmF5fHxmdW5jdGlvbihlKXtyZXR1cm4iQXJyYXkiPT1uKGUpfX0seyIuL19jb2YiOjM0fV0sNTQ6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIm9iamVjdCI9PXR5cGVvZiBlP251bGwhPT1lOiJmdW5jdGlvbiI9PXR5cGVvZiBlfX0se31dLDU1OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fYW4tb2JqZWN0Iik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyLG8pe3RyeXtyZXR1cm4gbz90KG4ocilbMF0sclsxXSk6dChyKX1jYXRjaChpKXt2YXIgcz1lWyJyZXR1cm4iXTt0aHJvdyB2b2lkIDAhPT1zJiZuKHMuY2FsbChlKSksaX19fSx7Ii4vX2FuLW9iamVjdCI6MzF9XSw1NjpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj1lKCIuL19vYmplY3QtY3JlYXRlIiksbz1lKCIuL19wcm9wZXJ0eS1kZXNjIiksaT1lKCIuL19zZXQtdG8tc3RyaW5nLXRhZyIpLHM9e307ZSgiLi9faGlkZSIpKHMsZSgiLi9fd2tzIikoIml0ZXJhdG9yIiksZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30pLHQuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7ZS5wcm90b3R5cGU9bihzLHtuZXh0Om8oMSxyKX0pLGkoZSx0KyIgSXRlcmF0b3IiKX19LHsiLi9faGlkZSI6NDcsIi4vX29iamVjdC1jcmVhdGUiOjY1LCIuL19wcm9wZXJ0eS1kZXNjIjo3NywiLi9fc2V0LXRvLXN0cmluZy10YWciOjgyLCIuL193a3MiOjk3fV0sNTc6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG49ZSgiLi9fbGlicmFyeSIpLG89ZSgiLi9fZXhwb3J0IiksaT1lKCIuL19yZWRlZmluZSIpLHM9ZSgiLi9faGlkZSIpLGM9ZSgiLi9faGFzIiksYT1lKCIuL19pdGVyYXRvcnMiKSx1PWUoIi4vX2l0ZXItY3JlYXRlIiksbD1lKCIuL19zZXQtdG8tc3RyaW5nLXRhZyIpLGY9ZSgiLi9fb2JqZWN0LWdwbyIpLGQ9ZSgiLi9fd2tzIikoIml0ZXJhdG9yIikscD0hKFtdLmtleXMmJiJuZXh0ImluW10ua2V5cygpKSxfPSJAQGl0ZXJhdG9yIixiPSJrZXlzIixoPSJ2YWx1ZXMiLHk9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc307dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyLHYsaixtLGcpe3Uocix0LHYpO3ZhciB3LE8sayx4PWZ1bmN0aW9uKGUpe2lmKCFwJiZlIGluIFQpcmV0dXJuIFRbZV07c3dpdGNoKGUpe2Nhc2UgYjpyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHIodGhpcyxlKX07Y2FzZSBoOnJldHVybiBmdW5jdGlvbigpe3JldHVybiBuZXcgcih0aGlzLGUpfX1yZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHIodGhpcyxlKX19LEM9dCsiIEl0ZXJhdG9yIixFPWo9PWgsUz0hMSxUPWUucHJvdG90eXBlLE09VFtkXXx8VFtfXXx8aiYmVFtqXSxSPU18fHgoaiksTj1qP0U/eCgiZW50cmllcyIpOlI6dm9pZCAwLFA9IkFycmF5Ij09dD9ULmVudHJpZXN8fE06TTtpZihQJiYoaz1mKFAuY2FsbChuZXcgZSkpLGshPT1PYmplY3QucHJvdG90eXBlJiYobChrLEMsITApLG58fGMoayxkKXx8cyhrLGQseSkpKSxFJiZNJiZNLm5hbWUhPT1oJiYoUz0hMCxSPWZ1bmN0aW9uKCl7cmV0dXJuIE0uY2FsbCh0aGlzKX0pLG4mJiFnfHwhcCYmIVMmJlRbZF18fHMoVCxkLFIpLGFbdF09UixhW0NdPXksailpZih3PXt2YWx1ZXM6RT9SOngoaCksa2V5czptP1I6eChiKSxlbnRyaWVzOk59LGcpZm9yKE8gaW4gdylPIGluIFR8fGkoVCxPLHdbT10pO2Vsc2UgbyhvLlArby5GKihwfHxTKSx0LHcpO3JldHVybiB3fX0seyIuL19leHBvcnQiOjQyLCIuL19oYXMiOjQ2LCIuL19oaWRlIjo0NywiLi9faXRlci1jcmVhdGUiOjU2LCIuL19pdGVyYXRvcnMiOjYwLCIuL19saWJyYXJ5Ijo2MiwiLi9fb2JqZWN0LWdwbyI6NzIsIi4vX3JlZGVmaW5lIjo3OSwiLi9fc2V0LXRvLXN0cmluZy10YWciOjgyLCIuL193a3MiOjk3fV0sNTg6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL193a3MiKSgiaXRlcmF0b3IiKSxvPSExO3RyeXt2YXIgaT1bN11bbl0oKTtpWyJyZXR1cm4iXT1mdW5jdGlvbigpe289ITB9LEFycmF5LmZyb20oaSxmdW5jdGlvbigpe3Rocm93IDJ9KX1jYXRjaChzKXt9dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7aWYoIXQmJiFvKXJldHVybiExO3ZhciByPSExO3RyeXt2YXIgaT1bN10scz1pW25dKCk7cy5uZXh0PWZ1bmN0aW9uKCl7cmV0dXJue2RvbmU6cj0hMH19LGlbbl09ZnVuY3Rpb24oKXtyZXR1cm4gc30sZShpKX1jYXRjaChjKXt9cmV0dXJuIHJ9fSx7Ii4vX3drcyI6OTd9XSw1OTpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybnt2YWx1ZTp0LGRvbmU6ISFlfX19LHt9XSw2MDpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17fX0se31dLDYxOltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fb2JqZWN0LWtleXMiKSxvPWUoIi4vX3RvLWlvYmplY3QiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIHIsaT1vKGUpLHM9bihpKSxjPXMubGVuZ3RoLGE9MDtjPmE7KWlmKGlbcj1zW2ErK11dPT09dClyZXR1cm4gcn19LHsiLi9fb2JqZWN0LWtleXMiOjc0LCIuL190by1pb2JqZWN0Ijo5MH1dLDYyOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPSEwfSx7fV0sNjM6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL191aWQiKSgibWV0YSIpLG89ZSgiLi9faXMtb2JqZWN0IiksaT1lKCIuL19oYXMiKSxzPWUoIi4vX29iamVjdC1kcCIpLmYsYz0wLGE9T2JqZWN0LmlzRXh0ZW5zaWJsZXx8ZnVuY3Rpb24oKXtyZXR1cm4hMH0sdT0hZSgiLi9fZmFpbHMiKShmdW5jdGlvbigpe3JldHVybiBhKE9iamVjdC5wcmV2ZW50RXh0ZW5zaW9ucyh7fSkpfSksbD1mdW5jdGlvbihlKXtzKGUsbix7dmFsdWU6e2k6Ik8iKyArK2Msdzp7fX19KX0sZj1mdW5jdGlvbihlLHQpe2lmKCFvKGUpKXJldHVybiJzeW1ib2wiPT10eXBlb2YgZT9lOigic3RyaW5nIj09dHlwZW9mIGU/IlMiOiJQIikrZTtpZighaShlLG4pKXtpZighYShlKSlyZXR1cm4iRiI7aWYoIXQpcmV0dXJuIkUiO2woZSl9cmV0dXJuIGVbbl0uaX0sZD1mdW5jdGlvbihlLHQpe2lmKCFpKGUsbikpe2lmKCFhKGUpKXJldHVybiEwO2lmKCF0KXJldHVybiExO2woZSl9cmV0dXJuIGVbbl0ud30scD1mdW5jdGlvbihlKXtyZXR1cm4gdSYmXy5ORUVEJiZhKGUpJiYhaShlLG4pJiZsKGUpLGV9LF89dC5leHBvcnRzPXtLRVk6bixORUVEOiExLGZhc3RLZXk6ZixnZXRXZWFrOmQsb25GcmVlemU6cH19LHsiLi9fZmFpbHMiOjQzLCIuL19oYXMiOjQ2LCIuL19pcy1vYmplY3QiOjU0LCIuL19vYmplY3QtZHAiOjY2LCIuL191aWQiOjk0fV0sNjQ6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19nbG9iYWwiKSxvPWUoIi4vX3Rhc2siKS5zZXQsaT1uLk11dGF0aW9uT2JzZXJ2ZXJ8fG4uV2ViS2l0TXV0YXRpb25PYnNlcnZlcixzPW4ucHJvY2VzcyxjPW4uUHJvbWlzZSxhPSJwcm9jZXNzIj09ZSgiLi9fY29mIikocyk7dC5leHBvcnRzPWZ1bmN0aW9uKCl7dmFyIGUsdCxyLHU9ZnVuY3Rpb24oKXt2YXIgbixvO2ZvcihhJiYobj1zLmRvbWFpbikmJm4uZXhpdCgpO2U7KXtvPWUuZm4sZT1lLm5leHQ7dHJ5e28oKX1jYXRjaChpKXt0aHJvdyBlP3IoKTp0PXZvaWQgMCxpfX10PXZvaWQgMCxuJiZuLmVudGVyKCl9O2lmKGEpcj1mdW5jdGlvbigpe3MubmV4dFRpY2sodSl9O2Vsc2UgaWYoaSl7dmFyIGw9ITAsZj1kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgiIik7bmV3IGkodSkub2JzZXJ2ZShmLHtjaGFyYWN0ZXJEYXRhOiEwfSkscj1mdW5jdGlvbigpe2YuZGF0YT1sPSFsfX1lbHNlIGlmKGMmJmMucmVzb2x2ZSl7dmFyIGQ9Yy5yZXNvbHZlKCk7cj1mdW5jdGlvbigpe2QudGhlbih1KX19ZWxzZSByPWZ1bmN0aW9uKCl7by5jYWxsKG4sdSl9O3JldHVybiBmdW5jdGlvbihuKXt2YXIgbz17Zm46bixuZXh0OnZvaWQgMH07dCYmKHQubmV4dD1vKSxlfHwoZT1vLHIoKSksdD1vfX19LHsiLi9fY29mIjozNCwiLi9fZ2xvYmFsIjo0NSwiLi9fdGFzayI6ODd9XSw2NTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2FuLW9iamVjdCIpLG89ZSgiLi9fb2JqZWN0LWRwcyIpLGk9ZSgiLi9fZW51bS1idWcta2V5cyIpLHM9ZSgiLi9fc2hhcmVkLWtleSIpKCJJRV9QUk9UTyIpLGM9ZnVuY3Rpb24oKXt9LGE9InByb3RvdHlwZSIsdT1mdW5jdGlvbigpe3ZhciB0LHI9ZSgiLi9fZG9tLWNyZWF0ZSIpKCJpZnJhbWUiKSxuPWkubGVuZ3RoLG89Ij4iO2ZvcihyLnN0eWxlLmRpc3BsYXk9Im5vbmUiLGUoIi4vX2h0bWwiKS5hcHBlbmRDaGlsZChyKSxyLnNyYz0iamF2YXNjcmlwdDoiLHQ9ci5jb250ZW50V2luZG93LmRvY3VtZW50LHQub3BlbigpLHQud3JpdGUoIjxzY3JpcHQ+ZG9jdW1lbnQuRj1PYmplY3Q8L3NjcmlwdCIrbyksdC5jbG9zZSgpLHU9dC5GO24tLTspZGVsZXRlIHVbYV1baVtuXV07cmV0dXJuIHUoKX07dC5leHBvcnRzPU9iamVjdC5jcmVhdGV8fGZ1bmN0aW9uKGUsdCl7dmFyIHI7cmV0dXJuIG51bGwhPT1lPyhjW2FdPW4oZSkscj1uZXcgYyxjW2FdPW51bGwscltzXT1lKTpyPXUoKSx2b2lkIDA9PT10P3I6byhyLHQpfX0seyIuL19hbi1vYmplY3QiOjMxLCIuL19kb20tY3JlYXRlIjozOSwiLi9fZW51bS1idWcta2V5cyI6NDAsIi4vX2h0bWwiOjQ4LCIuL19vYmplY3QtZHBzIjo2NywiLi9fc2hhcmVkLWtleSI6ODN9XSw2NjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2FuLW9iamVjdCIpLG89ZSgiLi9faWU4LWRvbS1kZWZpbmUiKSxpPWUoIi4vX3RvLXByaW1pdGl2ZSIpLHM9T2JqZWN0LmRlZmluZVByb3BlcnR5O3IuZj1lKCIuL19kZXNjcmlwdG9ycyIpP09iamVjdC5kZWZpbmVQcm9wZXJ0eTpmdW5jdGlvbihlLHQscil7aWYobihlKSx0PWkodCwhMCksbihyKSxvKXRyeXtyZXR1cm4gcyhlLHQscil9Y2F0Y2goYyl7fWlmKCJnZXQiaW4gcnx8InNldCJpbiByKXRocm93IFR5cGVFcnJvcigiQWNjZXNzb3JzIG5vdCBzdXBwb3J0ZWQhIik7cmV0dXJuInZhbHVlImluIHImJihlW3RdPXIudmFsdWUpLGV9fSx7Ii4vX2FuLW9iamVjdCI6MzEsIi4vX2Rlc2NyaXB0b3JzIjozOCwiLi9faWU4LWRvbS1kZWZpbmUiOjQ5LCIuL190by1wcmltaXRpdmUiOjkzfV0sNjc6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19vYmplY3QtZHAiKSxvPWUoIi4vX2FuLW9iamVjdCIpLGk9ZSgiLi9fb2JqZWN0LWtleXMiKTt0LmV4cG9ydHM9ZSgiLi9fZGVzY3JpcHRvcnMiKT9PYmplY3QuZGVmaW5lUHJvcGVydGllczpmdW5jdGlvbihlLHQpe28oZSk7Zm9yKHZhciByLHM9aSh0KSxjPXMubGVuZ3RoLGE9MDtjPmE7KW4uZihlLHI9c1thKytdLHRbcl0pO3JldHVybiBlfX0seyIuL19hbi1vYmplY3QiOjMxLCIuL19kZXNjcmlwdG9ycyI6MzgsIi4vX29iamVjdC1kcCI6NjYsIi4vX29iamVjdC1rZXlzIjo3NH1dLDY4OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fb2JqZWN0LXBpZSIpLG89ZSgiLi9fcHJvcGVydHktZGVzYyIpLGk9ZSgiLi9fdG8taW9iamVjdCIpLHM9ZSgiLi9fdG8tcHJpbWl0aXZlIiksYz1lKCIuL19oYXMiKSxhPWUoIi4vX2llOC1kb20tZGVmaW5lIiksdT1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO3IuZj1lKCIuL19kZXNjcmlwdG9ycyIpP3U6ZnVuY3Rpb24oZSx0KXtpZihlPWkoZSksdD1zKHQsITApLGEpdHJ5e3JldHVybiB1KGUsdCl9Y2F0Y2gocil7fXJldHVybiBjKGUsdCk/byghbi5mLmNhbGwoZSx0KSxlW3RdKTp2b2lkIDB9fSx7Ii4vX2Rlc2NyaXB0b3JzIjozOCwiLi9faGFzIjo0NiwiLi9faWU4LWRvbS1kZWZpbmUiOjQ5LCIuL19vYmplY3QtcGllIjo3NSwiLi9fcHJvcGVydHktZGVzYyI6NzcsIi4vX3RvLWlvYmplY3QiOjkwLCIuL190by1wcmltaXRpdmUiOjkzfV0sNjk6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL190by1pb2JqZWN0Iiksbz1lKCIuL19vYmplY3QtZ29wbiIpLmYsaT17fS50b1N0cmluZyxzPSJvYmplY3QiPT10eXBlb2Ygd2luZG93JiZ3aW5kb3cmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzP09iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHdpbmRvdyk6W10sYz1mdW5jdGlvbihlKXt0cnl7cmV0dXJuIG8oZSl9Y2F0Y2godCl7cmV0dXJuIHMuc2xpY2UoKX19O3QuZXhwb3J0cy5mPWZ1bmN0aW9uKGUpe3JldHVybiBzJiYiW29iamVjdCBXaW5kb3ddIj09aS5jYWxsKGUpP2MoZSk6byhuKGUpKX19LHsiLi9fb2JqZWN0LWdvcG4iOjcwLCIuL190by1pb2JqZWN0Ijo5MH1dLDcwOltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fb2JqZWN0LWtleXMtaW50ZXJuYWwiKSxvPWUoIi4vX2VudW0tYnVnLWtleXMiKS5jb25jYXQoImxlbmd0aCIsInByb3RvdHlwZSIpO3IuZj1PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lc3x8ZnVuY3Rpb24oZSl7cmV0dXJuIG4oZSxvKX19LHsiLi9fZW51bS1idWcta2V5cyI6NDAsIi4vX29iamVjdC1rZXlzLWludGVybmFsIjo3M31dLDcxOltmdW5jdGlvbihlLHQscil7ci5mPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHN9LHt9XSw3MjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2hhcyIpLG89ZSgiLi9fdG8tb2JqZWN0IiksaT1lKCIuL19zaGFyZWQta2V5IikoIklFX1BST1RPIikscz1PYmplY3QucHJvdG90eXBlO3QuZXhwb3J0cz1PYmplY3QuZ2V0UHJvdG90eXBlT2Z8fGZ1bmN0aW9uKGUpe3JldHVybiBlPW8oZSksbihlLGkpP2VbaV06ImZ1bmN0aW9uIj09dHlwZW9mIGUuY29uc3RydWN0b3ImJmUgaW5zdGFuY2VvZiBlLmNvbnN0cnVjdG9yP2UuY29uc3RydWN0b3IucHJvdG90eXBlOmUgaW5zdGFuY2VvZiBPYmplY3Q/czpudWxsfX0seyIuL19oYXMiOjQ2LCIuL19zaGFyZWQta2V5Ijo4MywiLi9fdG8tb2JqZWN0Ijo5Mn1dLDczOltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9faGFzIiksbz1lKCIuL190by1pb2JqZWN0IiksaT1lKCIuL19hcnJheS1pbmNsdWRlcyIpKCExKSxzPWUoIi4vX3NoYXJlZC1rZXkiKSgiSUVfUFJPVE8iKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt2YXIgcixjPW8oZSksYT0wLHU9W107Zm9yKHIgaW4gYylyIT1zJiZuKGMscikmJnUucHVzaChyKTtmb3IoO3QubGVuZ3RoPmE7KW4oYyxyPXRbYSsrXSkmJih+aSh1LHIpfHx1LnB1c2gocikpO3JldHVybiB1fX0seyIuL19hcnJheS1pbmNsdWRlcyI6MzIsIi4vX2hhcyI6NDYsIi4vX3NoYXJlZC1rZXkiOjgzLCIuL190by1pb2JqZWN0Ijo5MH1dLDc0OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fb2JqZWN0LWtleXMtaW50ZXJuYWwiKSxvPWUoIi4vX2VudW0tYnVnLWtleXMiKTt0LmV4cG9ydHM9T2JqZWN0LmtleXN8fGZ1bmN0aW9uKGUpe3JldHVybiBuKGUsbyl9fSx7Ii4vX2VudW0tYnVnLWtleXMiOjQwLCIuL19vYmplY3Qta2V5cy1pbnRlcm5hbCI6NzN9XSw3NTpbZnVuY3Rpb24oZSx0LHIpe3IuZj17fS5wcm9wZXJ0eUlzRW51bWVyYWJsZX0se31dLDc2OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fZXhwb3J0Iiksbz1lKCIuL19jb3JlIiksaT1lKCIuL19mYWlscyIpO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3ZhciByPShvLk9iamVjdHx8e30pW2VdfHxPYmplY3RbZV0scz17fTtzW2VdPXQociksbihuLlMrbi5GKmkoZnVuY3Rpb24oKXtyKDEpfSksIk9iamVjdCIscyl9fSx7Ii4vX2NvcmUiOjM1LCIuL19leHBvcnQiOjQyLCIuL19mYWlscyI6NDN9XSw3NzpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybntlbnVtZXJhYmxlOiEoMSZlKSxjb25maWd1cmFibGU6ISgyJmUpLHdyaXRhYmxlOiEoNCZlKSx2YWx1ZTp0fX19LHt9XSw3ODpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2hpZGUiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe2Zvcih2YXIgbyBpbiB0KXImJmVbb10/ZVtvXT10W29dOm4oZSxvLHRbb10pO3JldHVybiBlfX0seyIuL19oaWRlIjo0N31dLDc5OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWUoIi4vX2hpZGUiKX0seyIuL19oaWRlIjo0N31dLDgwOltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9faXMtb2JqZWN0Iiksbz1lKCIuL19hbi1vYmplY3QiKSxpPWZ1bmN0aW9uKGUsdCl7aWYobyhlKSwhbih0KSYmbnVsbCE9PXQpdGhyb3cgVHlwZUVycm9yKHQrIjogY2FuJ3Qgc2V0IGFzIHByb3RvdHlwZSEiKX07dC5leHBvcnRzPXtzZXQ6T2JqZWN0LnNldFByb3RvdHlwZU9mfHwoIl9fcHJvdG9fXyJpbnt9P2Z1bmN0aW9uKHQscixuKXt0cnl7bj1lKCIuL19jdHgiKShGdW5jdGlvbi5jYWxsLGUoIi4vX29iamVjdC1nb3BkIikuZihPYmplY3QucHJvdG90eXBlLCJfX3Byb3RvX18iKS5zZXQsMiksbih0LFtdKSxyPSEodCBpbnN0YW5jZW9mIEFycmF5KX1jYXRjaChvKXtyPSEwfXJldHVybiBmdW5jdGlvbihlLHQpe3JldHVybiBpKGUsdCkscj9lLl9fcHJvdG9fXz10Om4oZSx0KSxlfX0oe30sITEpOnZvaWQgMCksY2hlY2s6aX19LHsiLi9fYW4tb2JqZWN0IjozMSwiLi9fY3R4IjozNiwiLi9faXMtb2JqZWN0Ijo1NCwiLi9fb2JqZWN0LWdvcGQiOjY4fV0sODE6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG49ZSgiLi9fZ2xvYmFsIiksbz1lKCIuL19jb3JlIiksaT1lKCIuL19vYmplY3QtZHAiKSxzPWUoIi4vX2Rlc2NyaXB0b3JzIiksYz1lKCIuL193a3MiKSgic3BlY2llcyIpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXt2YXIgdD0iZnVuY3Rpb24iPT10eXBlb2Ygb1tlXT9vW2VdOm5bZV07cyYmdCYmIXRbY10mJmkuZih0LGMse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc319KX19LHsiLi9fY29yZSI6MzUsIi4vX2Rlc2NyaXB0b3JzIjozOCwiLi9fZ2xvYmFsIjo0NSwiLi9fb2JqZWN0LWRwIjo2NiwiLi9fd2tzIjo5N31dLDgyOltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fb2JqZWN0LWRwIikuZixvPWUoIi4vX2hhcyIpLGk9ZSgiLi9fd2tzIikoInRvU3RyaW5nVGFnIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXtlJiYhbyhlPXI/ZTplLnByb3RvdHlwZSxpKSYmbihlLGkse2NvbmZpZ3VyYWJsZTohMCx2YWx1ZTp0fSl9fSx7Ii4vX2hhcyI6NDYsIi4vX29iamVjdC1kcCI6NjYsIi4vX3drcyI6OTd9XSw4MzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX3NoYXJlZCIpKCJrZXlzIiksbz1lKCIuL191aWQiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5bZV18fChuW2VdPW8oZSkpfX0seyIuL19zaGFyZWQiOjg0LCIuL191aWQiOjk0fV0sODQ6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19nbG9iYWwiKSxvPSJfX2NvcmUtanNfc2hhcmVkX18iLGk9bltvXXx8KG5bb109e30pO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gaVtlXXx8KGlbZV09e30pfX0seyIuL19nbG9iYWwiOjQ1fV0sODU6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19hbi1vYmplY3QiKSxvPWUoIi4vX2EtZnVuY3Rpb24iKSxpPWUoIi4vX3drcyIpKCJzcGVjaWVzIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7dmFyIHIscz1uKGUpLmNvbnN0cnVjdG9yO3JldHVybiB2b2lkIDA9PT1zfHx2b2lkIDA9PShyPW4ocylbaV0pP3Q6byhyKX19LHsiLi9fYS1mdW5jdGlvbiI6MjgsIi4vX2FuLW9iamVjdCI6MzEsIi4vX3drcyI6OTd9XSw4NjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX3RvLWludGVnZXIiKSxvPWUoIi4vX2RlZmluZWQiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKHQscil7dmFyIGkscyxjPVN0cmluZyhvKHQpKSxhPW4ociksdT1jLmxlbmd0aDtyZXR1cm4gMD5hfHxhPj11P2U/IiI6dm9pZCAwOihpPWMuY2hhckNvZGVBdChhKSw1NTI5Nj5pfHxpPjU2MzE5fHxhKzE9PT11fHwocz1jLmNoYXJDb2RlQXQoYSsxKSk8NTYzMjB8fHM+NTczNDM/ZT9jLmNoYXJBdChhKTppOmU/Yy5zbGljZShhLGErMik6KGktNTUyOTY8PDEwKSsocy01NjMyMCkrNjU1MzYpfX19LHsiLi9fZGVmaW5lZCI6MzcsIi4vX3RvLWludGVnZXIiOjg5fV0sODc6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbixvLGkscz1lKCIuL19jdHgiKSxjPWUoIi4vX2ludm9rZSIpLGE9ZSgiLi9faHRtbCIpLHU9ZSgiLi9fZG9tLWNyZWF0ZSIpLGw9ZSgiLi9fZ2xvYmFsIiksZj1sLnByb2Nlc3MsZD1sLnNldEltbWVkaWF0ZSxwPWwuY2xlYXJJbW1lZGlhdGUsXz1sLk1lc3NhZ2VDaGFubmVsLGI9MCxoPXt9LHk9Im9ucmVhZHlzdGF0ZWNoYW5nZSIsdj1mdW5jdGlvbigpe3ZhciBlPSt0aGlzO2lmKGguaGFzT3duUHJvcGVydHkoZSkpe3ZhciB0PWhbZV07ZGVsZXRlIGhbZV0sdCgpfX0saj1mdW5jdGlvbihlKXt2LmNhbGwoZS5kYXRhKX07ZCYmcHx8KGQ9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PVtdLHI9MTthcmd1bWVudHMubGVuZ3RoPnI7KXQucHVzaChhcmd1bWVudHNbcisrXSk7cmV0dXJuIGhbKytiXT1mdW5jdGlvbigpe2MoImZ1bmN0aW9uIj09dHlwZW9mIGU/ZTpGdW5jdGlvbihlKSx0KX0sbihiKSxifSxwPWZ1bmN0aW9uKGUpe2RlbGV0ZSBoW2VdfSwicHJvY2VzcyI9PWUoIi4vX2NvZiIpKGYpP249ZnVuY3Rpb24oZSl7Zi5uZXh0VGljayhzKHYsZSwxKSl9Ol8/KG89bmV3IF8saT1vLnBvcnQyLG8ucG9ydDEub25tZXNzYWdlPWosbj1zKGkucG9zdE1lc3NhZ2UsaSwxKSk6bC5hZGRFdmVudExpc3RlbmVyJiYiZnVuY3Rpb24iPT10eXBlb2YgcG9zdE1lc3NhZ2UmJiFsLmltcG9ydFNjcmlwdHM/KG49ZnVuY3Rpb24oZSl7bC5wb3N0TWVzc2FnZShlKyIiLCIqIil9LGwuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsaiwhMSkpOm49eSBpbiB1KCJzY3JpcHQiKT9mdW5jdGlvbihlKXthLmFwcGVuZENoaWxkKHUoInNjcmlwdCIpKVt5XT1mdW5jdGlvbigpe2EucmVtb3ZlQ2hpbGQodGhpcyksdi5jYWxsKGUpfX06ZnVuY3Rpb24oZSl7c2V0VGltZW91dChzKHYsZSwxKSwwKX0pLHQuZXhwb3J0cz17c2V0OmQsY2xlYXI6cH19LHsiLi9fY29mIjozNCwiLi9fY3R4IjozNiwiLi9fZG9tLWNyZWF0ZSI6MzksIi4vX2dsb2JhbCI6NDUsIi4vX2h0bWwiOjQ4LCIuL19pbnZva2UiOjUwfV0sODg6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL190by1pbnRlZ2VyIiksbz1NYXRoLm1heCxpPU1hdGgubWluO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybiBlPW4oZSksMD5lP28oZSt0LDApOmkoZSx0KX19LHsiLi9fdG8taW50ZWdlciI6ODl9XSw4OTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPU1hdGguY2VpbCxvPU1hdGguZmxvb3I7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBpc05hTihlPStlKT8wOihlPjA/bzpuKShlKX19LHt9XSw5MDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2lvYmplY3QiKSxvPWUoIi4vX2RlZmluZWQiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIG4obyhlKSl9fSx7Ii4vX2RlZmluZWQiOjM3LCIuL19pb2JqZWN0Ijo1MX1dLDkxOltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fdG8taW50ZWdlciIpLG89TWF0aC5taW47dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBlPjA/byhuKGUpLDkwMDcxOTkyNTQ3NDA5OTEpOjB9fSx7Ii4vX3RvLWludGVnZXIiOjg5fV0sOTI6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19kZWZpbmVkIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBPYmplY3QobihlKSl9fSx7Ii4vX2RlZmluZWQiOjM3fV0sOTM6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19pcy1vYmplY3QiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtpZighbihlKSlyZXR1cm4gZTt2YXIgcixvO2lmKHQmJiJmdW5jdGlvbiI9PXR5cGVvZihyPWUudG9TdHJpbmcpJiYhbihvPXIuY2FsbChlKSkpcmV0dXJuIG87aWYoImZ1bmN0aW9uIj09dHlwZW9mKHI9ZS52YWx1ZU9mKSYmIW4obz1yLmNhbGwoZSkpKXJldHVybiBvO2lmKCF0JiYiZnVuY3Rpb24iPT10eXBlb2Yocj1lLnRvU3RyaW5nKSYmIW4obz1yLmNhbGwoZSkpKXJldHVybiBvO3Rocm93IFR5cGVFcnJvcigiQ2FuJ3QgY29udmVydCBvYmplY3QgdG8gcHJpbWl0aXZlIHZhbHVlIil9fSx7Ii4vX2lzLW9iamVjdCI6NTR9XSw5NDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPTAsbz1NYXRoLnJhbmRvbSgpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4iU3ltYm9sKCIuY29uY2F0KHZvaWQgMD09PWU/IiI6ZSwiKV8iLCgrK24rbykudG9TdHJpbmcoMzYpKX19LHt9XSw5NTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2dsb2JhbCIpLG89ZSgiLi9fY29yZSIpLGk9ZSgiLi9fbGlicmFyeSIpLHM9ZSgiLi9fd2tzLWV4dCIpLGM9ZSgiLi9fb2JqZWN0LWRwIikuZjt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQ9by5TeW1ib2x8fChvLlN5bWJvbD1pP3t9Om4uU3ltYm9sfHx7fSk7Il8iPT1lLmNoYXJBdCgwKXx8ZSBpbiB0fHxjKHQsZSx7dmFsdWU6cy5mKGUpfSl9fSx7Ii4vX2NvcmUiOjM1LCIuL19nbG9iYWwiOjQ1LCIuL19saWJyYXJ5Ijo2MiwiLi9fb2JqZWN0LWRwIjo2NiwiLi9fd2tzLWV4dCI6OTZ9XSw5NjpbZnVuY3Rpb24oZSx0LHIpe3IuZj1lKCIuL193a3MiKX0seyIuL193a3MiOjk3fV0sOTc6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19zaGFyZWQiKSgid2tzIiksbz1lKCIuL191aWQiKSxpPWUoIi4vX2dsb2JhbCIpLlN5bWJvbCxzPSJmdW5jdGlvbiI9PXR5cGVvZiBpLGM9dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBuW2VdfHwobltlXT1zJiZpW2VdfHwocz9pOm8pKCJTeW1ib2wuIitlKSl9O2Muc3RvcmU9bn0seyIuL19nbG9iYWwiOjQ1LCIuL19zaGFyZWQiOjg0LCIuL191aWQiOjk0fV0sOTg6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19jbGFzc29mIiksbz1lKCIuL193a3MiKSgiaXRlcmF0b3IiKSxpPWUoIi4vX2l0ZXJhdG9ycyIpO3QuZXhwb3J0cz1lKCIuL19jb3JlIikuZ2V0SXRlcmF0b3JNZXRob2Q9ZnVuY3Rpb24oZSl7cmV0dXJuIHZvaWQgMCE9ZT9lW29dfHxlWyJAQGl0ZXJhdG9yIl18fGlbbihlKV06dm9pZCAwfX0seyIuL19jbGFzc29mIjozMywiLi9fY29yZSI6MzUsIi4vX2l0ZXJhdG9ycyI6NjAsIi4vX3drcyI6OTd9XSw5OTpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj1lKCIuL19hZGQtdG8tdW5zY29wYWJsZXMiKSxvPWUoIi4vX2l0ZXItc3RlcCIpLGk9ZSgiLi9faXRlcmF0b3JzIikscz1lKCIuL190by1pb2JqZWN0Iik7dC5leHBvcnRzPWUoIi4vX2l0ZXItZGVmaW5lIikoQXJyYXksIkFycmF5IixmdW5jdGlvbihlLHQpe3RoaXMuX3Q9cyhlKSx0aGlzLl9pPTAsdGhpcy5faz10fSxmdW5jdGlvbigpe3ZhciBlPXRoaXMuX3QsdD10aGlzLl9rLHI9dGhpcy5faSsrO3JldHVybiFlfHxyPj1lLmxlbmd0aD8odGhpcy5fdD12b2lkIDAsbygxKSk6ImtleXMiPT10P28oMCxyKToidmFsdWVzIj09dD9vKDAsZVtyXSk6bygwLFtyLGVbcl1dKX0sInZhbHVlcyIpLGkuQXJndW1lbnRzPWkuQXJyYXksbigia2V5cyIpLG4oInZhbHVlcyIpLG4oImVudHJpZXMiKX0seyIuL19hZGQtdG8tdW5zY29wYWJsZXMiOjI5LCIuL19pdGVyLWRlZmluZSI6NTcsIi4vX2l0ZXItc3RlcCI6NTksIi4vX2l0ZXJhdG9ycyI6NjAsIi4vX3RvLWlvYmplY3QiOjkwfV0sMTAwOltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fZXhwb3J0Iik7bihuLlMsIk9iamVjdCIse2NyZWF0ZTplKCIuL19vYmplY3QtY3JlYXRlIil9KX0seyIuL19leHBvcnQiOjQyLCIuL19vYmplY3QtY3JlYXRlIjo2NX1dLDEwMTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2V4cG9ydCIpO24obi5TK24uRiohZSgiLi9fZGVzY3JpcHRvcnMiKSwiT2JqZWN0Iix7ZGVmaW5lUHJvcGVydHk6ZSgiLi9fb2JqZWN0LWRwIikuZn0pfSx7Ii4vX2Rlc2NyaXB0b3JzIjozOCwiLi9fZXhwb3J0Ijo0MiwiLi9fb2JqZWN0LWRwIjo2Nn1dLDEwMjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX3RvLWlvYmplY3QiKSxvPWUoIi4vX29iamVjdC1nb3BkIikuZjtlKCIuL19vYmplY3Qtc2FwIikoImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oZSx0KXtyZXR1cm4gbyhuKGUpLHQpfX0pfSx7Ii4vX29iamVjdC1nb3BkIjo2OCwiLi9fb2JqZWN0LXNhcCI6NzYsIi4vX3RvLWlvYmplY3QiOjkwfV0sMTAzOltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fdG8tb2JqZWN0Iiksbz1lKCIuL19vYmplY3QtZ3BvIik7ZSgiLi9fb2JqZWN0LXNhcCIpKCJnZXRQcm90b3R5cGVPZiIsZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIG8obihlKSl9fSl9LHsiLi9fb2JqZWN0LWdwbyI6NzIsIi4vX29iamVjdC1zYXAiOjc2LCIuL190by1vYmplY3QiOjkyfV0sMTA0OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fdG8tb2JqZWN0Iiksbz1lKCIuL19vYmplY3Qta2V5cyIpO2UoIi4vX29iamVjdC1zYXAiKSgia2V5cyIsZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIG8obihlKSl9fSl9LHsiLi9fb2JqZWN0LWtleXMiOjc0LCIuL19vYmplY3Qtc2FwIjo3NiwiLi9fdG8tb2JqZWN0Ijo5Mn1dLDEwNTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2V4cG9ydCIpO24obi5TLCJPYmplY3QiLHtzZXRQcm90b3R5cGVPZjplKCIuL19zZXQtcHJvdG8iKS5zZXR9KX0seyIuL19leHBvcnQiOjQyLCIuL19zZXQtcHJvdG8iOjgwfV0sMTA2OltmdW5jdGlvbihlLHQscil7fSx7fV0sMTA3OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBuLG8saSxzPWUoIi4vX2xpYnJhcnkiKSxjPWUoIi4vX2dsb2JhbCIpLGE9ZSgiLi9fY3R4IiksdT1lKCIuL19jbGFzc29mIiksbD1lKCIuL19leHBvcnQiKSxmPWUoIi4vX2lzLW9iamVjdCIpLGQ9KGUoIi4vX2FuLW9iamVjdCIpLGUoIi4vX2EtZnVuY3Rpb24iKSkscD1lKCIuL19hbi1pbnN0YW5jZSIpLF89ZSgiLi9fZm9yLW9mIiksYj0oZSgiLi9fc2V0LXByb3RvIikuc2V0LGUoIi4vX3NwZWNpZXMtY29uc3RydWN0b3IiKSksaD1lKCIuL190YXNrIikuc2V0LHk9ZSgiLi9fbWljcm90YXNrIikoKSx2PSJQcm9taXNlIixqPWMuVHlwZUVycm9yLG09Yy5wcm9jZXNzLGc9Y1t2XSxtPWMucHJvY2Vzcyx3PSJwcm9jZXNzIj09dShtKSxPPWZ1bmN0aW9uKCl7fSxrPSEhZnVuY3Rpb24oKXt0cnl7dmFyIHQ9Zy5yZXNvbHZlKDEpLHI9KHQuY29uc3RydWN0b3I9e30pW2UoIi4vX3drcyIpKCJzcGVjaWVzIildPWZ1bmN0aW9uKGUpe2UoTyxPKX07cmV0dXJuKHd8fCJmdW5jdGlvbiI9PXR5cGVvZiBQcm9taXNlUmVqZWN0aW9uRXZlbnQpJiZ0LnRoZW4oTylpbnN0YW5jZW9mIHJ9Y2F0Y2gobil7fX0oKSx4PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU9PT10fHxlPT09ZyYmdD09PWl9LEM9ZnVuY3Rpb24oZSl7dmFyIHQ7cmV0dXJuIGYoZSkmJiJmdW5jdGlvbiI9PXR5cGVvZih0PWUudGhlbik/dDohMX0sRT1mdW5jdGlvbihlKXtyZXR1cm4geChnLGUpP25ldyBTKGUpOm5ldyBvKGUpfSxTPW89ZnVuY3Rpb24oZSl7dmFyIHQscjt0aGlzLnByb21pc2U9bmV3IGUoZnVuY3Rpb24oZSxuKXtpZih2b2lkIDAhPT10fHx2b2lkIDAhPT1yKXRocm93IGooIkJhZCBQcm9taXNlIGNvbnN0cnVjdG9yIik7dD1lLHI9bn0pLHRoaXMucmVzb2x2ZT1kKHQpLHRoaXMucmVqZWN0PWQocil9LFQ9ZnVuY3Rpb24oZSl7dHJ5e2UoKX1jYXRjaCh0KXtyZXR1cm57ZXJyb3I6dH19fSxNPWZ1bmN0aW9uKGUsdCl7aWYoIWUuX24pe2UuX249ITA7dmFyIHI9ZS5fYzt5KGZ1bmN0aW9uKCl7Zm9yKHZhciBuPWUuX3Ysbz0xPT1lLl9zLGk9MCxzPWZ1bmN0aW9uKHQpe3ZhciByLGkscz1vP3Qub2s6dC5mYWlsLGM9dC5yZXNvbHZlLGE9dC5yZWplY3QsdT10LmRvbWFpbjt0cnl7cz8ob3x8KDI9PWUuX2gmJlAoZSksZS5faD0xKSxzPT09ITA/cj1uOih1JiZ1LmVudGVyKCkscj1zKG4pLHUmJnUuZXhpdCgpKSxyPT09dC5wcm9taXNlP2EoaigiUHJvbWlzZS1jaGFpbiBjeWNsZSIpKTooaT1DKHIpKT9pLmNhbGwocixjLGEpOmMocikpOmEobil9Y2F0Y2gobCl7YShsKX19O3IubGVuZ3RoPmk7KXMocltpKytdKTtlLl9jPVtdLGUuX249ITEsdCYmIWUuX2gmJlIoZSl9KX19LFI9ZnVuY3Rpb24oZSl7aC5jYWxsKGMsZnVuY3Rpb24oKXt2YXIgdCxyLG4sbz1lLl92O2lmKE4oZSkmJih0PVQoZnVuY3Rpb24oKXt3P20uZW1pdCgidW5oYW5kbGVkUmVqZWN0aW9uIixvLGUpOihyPWMub251bmhhbmRsZWRyZWplY3Rpb24pP3Ioe3Byb21pc2U6ZSxyZWFzb246b30pOihuPWMuY29uc29sZSkmJm4uZXJyb3ImJm4uZXJyb3IoIlVuaGFuZGxlZCBwcm9taXNlIHJlamVjdGlvbiIsbyl9KSxlLl9oPXd8fE4oZSk/MjoxKSxlLl9hPXZvaWQgMCx0KXRocm93IHQuZXJyb3J9KX0sTj1mdW5jdGlvbihlKXtpZigxPT1lLl9oKXJldHVybiExO2Zvcih2YXIgdCxyPWUuX2F8fGUuX2Msbj0wO3IubGVuZ3RoPm47KWlmKHQ9cltuKytdLHQuZmFpbHx8IU4odC5wcm9taXNlKSlyZXR1cm4hMTtyZXR1cm4hMH0sUD1mdW5jdGlvbihlKXtoLmNhbGwoYyxmdW5jdGlvbigpe3ZhciB0O3c/bS5lbWl0KCJyZWplY3Rpb25IYW5kbGVkIixlKToodD1jLm9ucmVqZWN0aW9uaGFuZGxlZCkmJnQoe3Byb21pc2U6ZSxyZWFzb246ZS5fdn0pfSl9LEQ9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczt0Ll9kfHwodC5fZD0hMCx0PXQuX3d8fHQsdC5fdj1lLHQuX3M9Mix0Ll9hfHwodC5fYT10Ll9jLnNsaWNlKCkpLE0odCwhMCkpfSxBPWZ1bmN0aW9uKGUpe3ZhciB0LHI9dGhpcztpZighci5fZCl7ci5fZD0hMCxyPXIuX3d8fHI7dHJ5e2lmKHI9PT1lKXRocm93IGooIlByb21pc2UgY2FuJ3QgYmUgcmVzb2x2ZWQgaXRzZWxmIik7KHQ9QyhlKSk/eShmdW5jdGlvbigpe3ZhciBuPXtfdzpyLF9kOiExfTt0cnl7dC5jYWxsKGUsYShBLG4sMSksYShELG4sMSkpfWNhdGNoKG8pe0QuY2FsbChuLG8pfX0pOihyLl92PWUsci5fcz0xLE0ociwhMSkpfWNhdGNoKG4pe0QuY2FsbCh7X3c6cixfZDohMX0sbil9fX07a3x8KGc9ZnVuY3Rpb24oZSl7cCh0aGlzLGcsdiwiX2giKSxkKGUpLG4uY2FsbCh0aGlzKTt0cnl7ZShhKEEsdGhpcywxKSxhKEQsdGhpcywxKSl9Y2F0Y2godCl7RC5jYWxsKHRoaXMsdCl9fSxuPWZ1bmN0aW9uKGUpe3RoaXMuX2M9W10sdGhpcy5fYT12b2lkIDAsdGhpcy5fcz0wLHRoaXMuX2Q9ITEsdGhpcy5fdj12b2lkIDAsdGhpcy5faD0wLHRoaXMuX249ITF9LG4ucHJvdG90eXBlPWUoIi4vX3JlZGVmaW5lLWFsbCIpKGcucHJvdG90eXBlLHt0aGVuOmZ1bmN0aW9uKGUsdCl7dmFyIHI9RShiKHRoaXMsZykpO3JldHVybiByLm9rPSJmdW5jdGlvbiI9PXR5cGVvZiBlP2U6ITAsci5mYWlsPSJmdW5jdGlvbiI9PXR5cGVvZiB0JiZ0LHIuZG9tYWluPXc/bS5kb21haW46dm9pZCAwLHRoaXMuX2MucHVzaChyKSx0aGlzLl9hJiZ0aGlzLl9hLnB1c2gociksdGhpcy5fcyYmTSh0aGlzLCExKSxyLnByb21pc2V9LCJjYXRjaCI6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMudGhlbih2b2lkIDAsZSl9fSksUz1mdW5jdGlvbigpe3ZhciBlPW5ldyBuO3RoaXMucHJvbWlzZT1lLHRoaXMucmVzb2x2ZT1hKEEsZSwxKSx0aGlzLnJlamVjdD1hKEQsZSwxKX0pLGwobC5HK2wuVytsLkYqIWsse1Byb21pc2U6Z30pLGUoIi4vX3NldC10by1zdHJpbmctdGFnIikoZyx2KSwNCmUoIi4vX3NldC1zcGVjaWVzIikodiksaT1lKCIuL19jb3JlIilbdl0sbChsLlMrbC5GKiFrLHYse3JlamVjdDpmdW5jdGlvbihlKXt2YXIgdD1FKHRoaXMpLHI9dC5yZWplY3Q7cmV0dXJuIHIoZSksdC5wcm9taXNlfX0pLGwobC5TK2wuRiooc3x8IWspLHYse3Jlc29sdmU6ZnVuY3Rpb24oZSl7aWYoZSBpbnN0YW5jZW9mIGcmJngoZS5jb25zdHJ1Y3Rvcix0aGlzKSlyZXR1cm4gZTt2YXIgdD1FKHRoaXMpLHI9dC5yZXNvbHZlO3JldHVybiByKGUpLHQucHJvbWlzZX19KSxsKGwuUytsLkYqIShrJiZlKCIuL19pdGVyLWRldGVjdCIpKGZ1bmN0aW9uKGUpe2cuYWxsKGUpWyJjYXRjaCJdKE8pfSkpLHYse2FsbDpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9RSh0KSxuPXIucmVzb2x2ZSxvPXIucmVqZWN0LGk9VChmdW5jdGlvbigpe3ZhciByPVtdLGk9MCxzPTE7XyhlLCExLGZ1bmN0aW9uKGUpe3ZhciBjPWkrKyxhPSExO3IucHVzaCh2b2lkIDApLHMrKyx0LnJlc29sdmUoZSkudGhlbihmdW5jdGlvbihlKXthfHwoYT0hMCxyW2NdPWUsLS1zfHxuKHIpKX0sbyl9KSwtLXN8fG4ocil9KTtyZXR1cm4gaSYmbyhpLmVycm9yKSxyLnByb21pc2V9LHJhY2U6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPUUodCksbj1yLnJlamVjdCxvPVQoZnVuY3Rpb24oKXtfKGUsITEsZnVuY3Rpb24oZSl7dC5yZXNvbHZlKGUpLnRoZW4oci5yZXNvbHZlLG4pfSl9KTtyZXR1cm4gbyYmbihvLmVycm9yKSxyLnByb21pc2V9fSl9LHsiLi9fYS1mdW5jdGlvbiI6MjgsIi4vX2FuLWluc3RhbmNlIjozMCwiLi9fYW4tb2JqZWN0IjozMSwiLi9fY2xhc3NvZiI6MzMsIi4vX2NvcmUiOjM1LCIuL19jdHgiOjM2LCIuL19leHBvcnQiOjQyLCIuL19mb3Itb2YiOjQ0LCIuL19nbG9iYWwiOjQ1LCIuL19pcy1vYmplY3QiOjU0LCIuL19pdGVyLWRldGVjdCI6NTgsIi4vX2xpYnJhcnkiOjYyLCIuL19taWNyb3Rhc2siOjY0LCIuL19yZWRlZmluZS1hbGwiOjc4LCIuL19zZXQtcHJvdG8iOjgwLCIuL19zZXQtc3BlY2llcyI6ODEsIi4vX3NldC10by1zdHJpbmctdGFnIjo4MiwiLi9fc3BlY2llcy1jb25zdHJ1Y3RvciI6ODUsIi4vX3Rhc2siOjg3LCIuL193a3MiOjk3fV0sMTA4OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBuPWUoIi4vX3N0cmluZy1hdCIpKCEwKTtlKCIuL19pdGVyLWRlZmluZSIpKFN0cmluZywiU3RyaW5nIixmdW5jdGlvbihlKXt0aGlzLl90PVN0cmluZyhlKSx0aGlzLl9pPTB9LGZ1bmN0aW9uKCl7dmFyIGUsdD10aGlzLl90LHI9dGhpcy5faTtyZXR1cm4gcj49dC5sZW5ndGg/e3ZhbHVlOnZvaWQgMCxkb25lOiEwfTooZT1uKHQsciksdGhpcy5faSs9ZS5sZW5ndGgse3ZhbHVlOmUsZG9uZTohMX0pfSl9LHsiLi9faXRlci1kZWZpbmUiOjU3LCIuL19zdHJpbmctYXQiOjg2fV0sMTA5OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBuPWUoIi4vX2dsb2JhbCIpLG89ZSgiLi9faGFzIiksaT1lKCIuL19kZXNjcmlwdG9ycyIpLHM9ZSgiLi9fZXhwb3J0IiksYz1lKCIuL19yZWRlZmluZSIpLGE9ZSgiLi9fbWV0YSIpLktFWSx1PWUoIi4vX2ZhaWxzIiksbD1lKCIuL19zaGFyZWQiKSxmPWUoIi4vX3NldC10by1zdHJpbmctdGFnIiksZD1lKCIuL191aWQiKSxwPWUoIi4vX3drcyIpLF89ZSgiLi9fd2tzLWV4dCIpLGI9ZSgiLi9fd2tzLWRlZmluZSIpLGg9ZSgiLi9fa2V5b2YiKSx5PWUoIi4vX2VudW0ta2V5cyIpLHY9ZSgiLi9faXMtYXJyYXkiKSxqPWUoIi4vX2FuLW9iamVjdCIpLG09ZSgiLi9fdG8taW9iamVjdCIpLGc9ZSgiLi9fdG8tcHJpbWl0aXZlIiksdz1lKCIuL19wcm9wZXJ0eS1kZXNjIiksTz1lKCIuL19vYmplY3QtY3JlYXRlIiksaz1lKCIuL19vYmplY3QtZ29wbi1leHQiKSx4PWUoIi4vX29iamVjdC1nb3BkIiksQz1lKCIuL19vYmplY3QtZHAiKSxFPWUoIi4vX29iamVjdC1rZXlzIiksUz14LmYsVD1DLmYsTT1rLmYsUj1uLlN5bWJvbCxOPW4uSlNPTixQPU4mJk4uc3RyaW5naWZ5LEQ9InByb3RvdHlwZSIsQT1wKCJfaGlkZGVuIiksTD1wKCJ0b1ByaW1pdGl2ZSIpLEY9e30ucHJvcGVydHlJc0VudW1lcmFibGUsST1sKCJzeW1ib2wtcmVnaXN0cnkiKSxWPWwoInN5bWJvbHMiKSx6PU9iamVjdFtEXSxVPSJmdW5jdGlvbiI9PXR5cGVvZiBSLEg9bi5RT2JqZWN0LEI9IUh8fCFIW0RdfHwhSFtEXS5maW5kQ2hpbGQsVz1pJiZ1KGZ1bmN0aW9uKCl7cmV0dXJuIDchPU8oVCh7fSwiYSIse2dldDpmdW5jdGlvbigpe3JldHVybiBUKHRoaXMsImEiLHt2YWx1ZTo3fSkuYX19KSkuYX0pP2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1TKHosdCk7biYmZGVsZXRlIHpbdF0sVChlLHQsciksbiYmZSE9PXomJlQoeix0LG4pfTpULEo9ZnVuY3Rpb24oZSl7dmFyIHQ9VltlXT1PKFJbRF0pO3JldHVybiB0Ll9rPWUsdH0sWT1VJiYic3ltYm9sIj09dHlwZW9mIFIuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuInN5bWJvbCI9PXR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIFJ9LHE9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBqKGUpLHQ9Zyh0LCEwKSxqKHIpLG8oVix0KT8oci5lbnVtZXJhYmxlPyhvKGUsQSkmJmVbQV1bdF0mJihlW0FdW3RdPSExKSxyPU8ocix7ZW51bWVyYWJsZTp3KDAsITEpfSkpOihvKGUsQSl8fFQoZSxBLHcoMSx7fSkpLGVbQV1bdF09ITApLFcoZSx0LHIpKTpUKGUsdCxyKX0sSz1mdW5jdGlvbihlLHQpe2ooZSk7Zm9yKHZhciByLG49eSh0PW0odCkpLG89MCxpPW4ubGVuZ3RoO2k+bzspcShlLHI9bltvKytdLHRbcl0pO3JldHVybiBlfSxHPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHZvaWQgMD09PXQ/TyhlKTpLKE8oZSksdCl9LFo9ZnVuY3Rpb24oZSl7dmFyIHQ9Ri5jYWxsKHRoaXMsZT1nKGUsITApKTtyZXR1cm4gdHx8IW8odGhpcyxlKXx8IW8oVixlKXx8byh0aGlzLEEpJiZ0aGlzW0FdW2VdP3Q6ITB9LFg9ZnVuY3Rpb24oZSx0KXt2YXIgcj1TKGU9bShlKSx0PWcodCwhMCkpO3JldHVybiFyfHwhbyhWLHQpfHxvKGUsQSkmJmVbQV1bdF18fChyLmVudW1lcmFibGU9ITApLHJ9LCQ9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0LHI9TShtKGUpKSxuPVtdLGk9MDtyLmxlbmd0aD5pOylvKFYsdD1yW2krK10pfHx0PT1BfHx0PT1hfHxuLnB1c2godCk7cmV0dXJuIG59LFE9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0LHI9TShtKGUpKSxuPVtdLGk9MDtyLmxlbmd0aD5pOylvKFYsdD1yW2krK10pJiZuLnB1c2goVlt0XSk7cmV0dXJuIG59O1V8fChSPWZ1bmN0aW9uKCl7aWYodGhpcyBpbnN0YW5jZW9mIFIpdGhyb3cgVHlwZUVycm9yKCJTeW1ib2wgaXMgbm90IGEgY29uc3RydWN0b3IhIik7dmFyIGU9ZChhcmd1bWVudHMubGVuZ3RoPjA/YXJndW1lbnRzWzBdOnZvaWQgMCk7cmV0dXJuIGkmJkImJlcoeixlLHtjb25maWd1cmFibGU6ITAsc2V0OmZ1bmN0aW9uKHQpe28odGhpcyxBKSYmbyh0aGlzW0FdLGUpJiYodGhpc1tBXVtlXT0hMSksVyh0aGlzLGUsdygxLHQpKX19KSxKKGUpfSxjKFJbRF0sInRvU3RyaW5nIixmdW5jdGlvbigpe3JldHVybiB0aGlzLl9rfSkseC5mPVgsQy5mPXEsZSgiLi9fb2JqZWN0LWdvcG4iKS5mPWsuZj0kLGUoIi4vX29iamVjdC1waWUiKS5mPVosZSgiLi9fb2JqZWN0LWdvcHMiKS5mPVEsaSYmIWUoIi4vX2xpYnJhcnkiKSYmYyh6LCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsWiwhMCksXy5mPWZ1bmN0aW9uKGUpe3JldHVybiBKKHAoZSkpfSkscyhzLkcrcy5XK3MuRiohVSx7U3ltYm9sOlJ9KTtmb3IodmFyIGVlPSJoYXNJbnN0YW5jZSxpc0NvbmNhdFNwcmVhZGFibGUsaXRlcmF0b3IsbWF0Y2gscmVwbGFjZSxzZWFyY2gsc3BlY2llcyxzcGxpdCx0b1ByaW1pdGl2ZSx0b1N0cmluZ1RhZyx1bnNjb3BhYmxlcyIuc3BsaXQoIiwiKSx0ZT0wO2VlLmxlbmd0aD50ZTspcChlZVt0ZSsrXSk7Zm9yKHZhciBlZT1FKHAuc3RvcmUpLHRlPTA7ZWUubGVuZ3RoPnRlOyliKGVlW3RlKytdKTtzKHMuUytzLkYqIVUsIlN5bWJvbCIseyJmb3IiOmZ1bmN0aW9uKGUpe3JldHVybiBvKEksZSs9IiIpP0lbZV06SVtlXT1SKGUpfSxrZXlGb3I6ZnVuY3Rpb24oZSl7aWYoWShlKSlyZXR1cm4gaChJLGUpO3Rocm93IFR5cGVFcnJvcihlKyIgaXMgbm90IGEgc3ltYm9sISIpfSx1c2VTZXR0ZXI6ZnVuY3Rpb24oKXtCPSEwfSx1c2VTaW1wbGU6ZnVuY3Rpb24oKXtCPSExfX0pLHMocy5TK3MuRiohVSwiT2JqZWN0Iix7Y3JlYXRlOkcsZGVmaW5lUHJvcGVydHk6cSxkZWZpbmVQcm9wZXJ0aWVzOkssZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOlgsZ2V0T3duUHJvcGVydHlOYW1lczokLGdldE93blByb3BlcnR5U3ltYm9sczpRfSksTiYmcyhzLlMrcy5GKighVXx8dShmdW5jdGlvbigpe3ZhciBlPVIoKTtyZXR1cm4iW251bGxdIiE9UChbZV0pfHwie30iIT1QKHthOmV9KXx8Int9IiE9UChPYmplY3QoZSkpfSkpLCJKU09OIix7c3RyaW5naWZ5OmZ1bmN0aW9uKGUpe2lmKHZvaWQgMCE9PWUmJiFZKGUpKXtmb3IodmFyIHQscixuPVtlXSxvPTE7YXJndW1lbnRzLmxlbmd0aD5vOyluLnB1c2goYXJndW1lbnRzW28rK10pO3JldHVybiB0PW5bMV0sImZ1bmN0aW9uIj09dHlwZW9mIHQmJihyPXQpLCFyJiZ2KHQpfHwodD1mdW5jdGlvbihlLHQpe3JldHVybiByJiYodD1yLmNhbGwodGhpcyxlLHQpKSxZKHQpP3ZvaWQgMDp0fSksblsxXT10LFAuYXBwbHkoTixuKX19fSksUltEXVtMXXx8ZSgiLi9faGlkZSIpKFJbRF0sTCxSW0RdLnZhbHVlT2YpLGYoUiwiU3ltYm9sIiksZihNYXRoLCJNYXRoIiwhMCksZihuLkpTT04sIkpTT04iLCEwKX0seyIuL19hbi1vYmplY3QiOjMxLCIuL19kZXNjcmlwdG9ycyI6MzgsIi4vX2VudW0ta2V5cyI6NDEsIi4vX2V4cG9ydCI6NDIsIi4vX2ZhaWxzIjo0MywiLi9fZ2xvYmFsIjo0NSwiLi9faGFzIjo0NiwiLi9faGlkZSI6NDcsIi4vX2lzLWFycmF5Ijo1MywiLi9fa2V5b2YiOjYxLCIuL19saWJyYXJ5Ijo2MiwiLi9fbWV0YSI6NjMsIi4vX29iamVjdC1jcmVhdGUiOjY1LCIuL19vYmplY3QtZHAiOjY2LCIuL19vYmplY3QtZ29wZCI6NjgsIi4vX29iamVjdC1nb3BuIjo3MCwiLi9fb2JqZWN0LWdvcG4tZXh0Ijo2OSwiLi9fb2JqZWN0LWdvcHMiOjcxLCIuL19vYmplY3Qta2V5cyI6NzQsIi4vX29iamVjdC1waWUiOjc1LCIuL19wcm9wZXJ0eS1kZXNjIjo3NywiLi9fcmVkZWZpbmUiOjc5LCIuL19zZXQtdG8tc3RyaW5nLXRhZyI6ODIsIi4vX3NoYXJlZCI6ODQsIi4vX3RvLWlvYmplY3QiOjkwLCIuL190by1wcmltaXRpdmUiOjkzLCIuL191aWQiOjk0LCIuL193a3MiOjk3LCIuL193a3MtZGVmaW5lIjo5NSwiLi9fd2tzLWV4dCI6OTZ9XSwxMTA6W2Z1bmN0aW9uKGUsdCxyKXtlKCIuL193a3MtZGVmaW5lIikoImFzeW5jSXRlcmF0b3IiKX0seyIuL193a3MtZGVmaW5lIjo5NX1dLDExMTpbZnVuY3Rpb24oZSx0LHIpe2UoIi4vX3drcy1kZWZpbmUiKSgib2JzZXJ2YWJsZSIpfSx7Ii4vX3drcy1kZWZpbmUiOjk1fV0sMTEyOltmdW5jdGlvbihlLHQscil7ZSgiLi9lczYuYXJyYXkuaXRlcmF0b3IiKTtmb3IodmFyIG49ZSgiLi9fZ2xvYmFsIiksbz1lKCIuL19oaWRlIiksaT1lKCIuL19pdGVyYXRvcnMiKSxzPWUoIi4vX3drcyIpKCJ0b1N0cmluZ1RhZyIpLGM9WyJOb2RlTGlzdCIsIkRPTVRva2VuTGlzdCIsIk1lZGlhTGlzdCIsIlN0eWxlU2hlZXRMaXN0IiwiQ1NTUnVsZUxpc3QiXSxhPTA7NT5hO2ErKyl7dmFyIHU9Y1thXSxsPW5bdV0sZj1sJiZsLnByb3RvdHlwZTtmJiYhZltzXSYmbyhmLHMsdSksaVt1XT1pLkFycmF5fX0seyIuL19nbG9iYWwiOjQ1LCIuL19oaWRlIjo0NywiLi9faXRlcmF0b3JzIjo2MCwiLi9fd2tzIjo5NywiLi9lczYuYXJyYXkuaXRlcmF0b3IiOjk5fV0sMTEzOltmdW5jdGlvbihlLHQscil7d2luZG93Lk11dGF0aW9uT2JzZXJ2ZXI9d2luZG93Lk11dGF0aW9uT2JzZXJ2ZXJ8fHdpbmRvdy5XZWJLaXRNdXRhdGlvbk9ic2VydmVyfHxmdW5jdGlvbihlKXtmdW5jdGlvbiB0KGUpe3RoaXMuZz1bXSx0aGlzLms9ZX1mdW5jdGlvbiByKGUpeyFmdW5jdGlvbiByKCl7dmFyIG49ZS50YWtlUmVjb3JkcygpO24ubGVuZ3RoJiZlLmsobixlKSxlLmY9c2V0VGltZW91dChyLHQuX3BlcmlvZCl9KCl9ZnVuY3Rpb24gbih0KXt2YXIgcixuPXt0eXBlOm51bGwsdGFyZ2V0Om51bGwsYWRkZWROb2RlczpbXSxyZW1vdmVkTm9kZXM6W10scHJldmlvdXNTaWJsaW5nOm51bGwsbmV4dFNpYmxpbmc6bnVsbCxhdHRyaWJ1dGVOYW1lOm51bGwsYXR0cmlidXRlTmFtZXNwYWNlOm51bGwsb2xkVmFsdWU6bnVsbH07Zm9yKHIgaW4gdCluW3JdIT09ZSYmdFtyXSE9PWUmJihuW3JdPXRbcl0pO3JldHVybiBufWZ1bmN0aW9uIG8oZSx0KXt2YXIgcj1jKGUsdCk7cmV0dXJuIGZ1bmN0aW9uKG4pe3ZhciBvLGE9bi5sZW5ndGg7dC5hJiZyLmEmJmkobixlLHIuYSx0LmQpLCh0LmJ8fHQuZSkmJihvPXMobixlLHIsdCkpLChvfHxuLmxlbmd0aCE9PWEpJiYocj1jKGUsdCkpfX1mdW5jdGlvbiBpKHQscixvLGkpe2Zvcih2YXIgcyxjLGE9e30sdT1yLmF0dHJpYnV0ZXMsbD11Lmxlbmd0aDtsLS07KXM9dVtsXSxjPXMubmFtZSxpJiZpW2NdPT09ZXx8KHMudmFsdWUhPT1vW2NdJiZ0LnB1c2gobih7dHlwZToiYXR0cmlidXRlcyIsdGFyZ2V0OnIsYXR0cmlidXRlTmFtZTpjLG9sZFZhbHVlOm9bY10sYXR0cmlidXRlTmFtZXNwYWNlOnMubmFtZXNwYWNlVVJJfSkpLGFbY109ITApO2ZvcihjIGluIG8pYVtjXXx8dC5wdXNoKG4oe3RhcmdldDpyLHR5cGU6ImF0dHJpYnV0ZXMiLGF0dHJpYnV0ZU5hbWU6YyxvbGRWYWx1ZTpvW2NdfSkpfWZ1bmN0aW9uIHModCxyLG8scyl7ZnVuY3Rpb24gYyhlLHIsbyxjLGEpe3ZhciBsPWUubGVuZ3RoLTE7YT0tfigobC1hKS8yKTtmb3IodmFyIGYsZCxwO3A9ZS5wb3AoKTspZj1vW3AuaF0sZD1jW3AuaV0scy5iJiZhJiZNYXRoLmFicyhwLmgtcC5pKT49bCYmKHQucHVzaChuKHt0eXBlOiJjaGlsZExpc3QiLHRhcmdldDpyLGFkZGVkTm9kZXM6W2ZdLHJlbW92ZWROb2RlczpbZl0sbmV4dFNpYmxpbmc6Zi5uZXh0U2libGluZyxwcmV2aW91c1NpYmxpbmc6Zi5wcmV2aW91c1NpYmxpbmd9KSksYS0tKSxzLmEmJmQuYSYmaSh0LGYsZC5hLHMuZCkscy5jJiYzPT09Zi5ub2RlVHlwZSYmZi5ub2RlVmFsdWUhPT1kLmMmJnQucHVzaChuKHt0eXBlOiJjaGFyYWN0ZXJEYXRhIix0YXJnZXQ6Zn0pKSxzLmUmJnUoZixkKX1mdW5jdGlvbiB1KHIsbyl7Zm9yKHZhciBkLHAsXyxiLGgseT1yLmNoaWxkTm9kZXMsdj1vLmIsaj15Lmxlbmd0aCxtPXY/di5sZW5ndGg6MCxnPTAsdz0wLE89MDtqPnd8fG0+TzspYj15W3ddLGg9KF89dltPXSkmJl8uaixiPT09aD8ocy5hJiZfLmEmJmkodCxiLF8uYSxzLmQpLHMuYyYmXy5jIT09ZSYmYi5ub2RlVmFsdWUhPT1fLmMmJnQucHVzaChuKHt0eXBlOiJjaGFyYWN0ZXJEYXRhIix0YXJnZXQ6Yn0pKSxwJiZjKHAscix5LHYsZykscy5lJiYoYi5jaGlsZE5vZGVzLmxlbmd0aHx8Xy5iJiZfLmIubGVuZ3RoKSYmdShiLF8pLHcrKyxPKyspOihsPSEwLGR8fChkPXt9LHA9W10pLGImJihkW189YShiKV18fChkW19dPSEwLC0xPT09KF89Zih2LGIsTywiaiIpKT9zLmImJih0LnB1c2gobih7dHlwZToiY2hpbGRMaXN0Iix0YXJnZXQ6cixhZGRlZE5vZGVzOltiXSxuZXh0U2libGluZzpiLm5leHRTaWJsaW5nLHByZXZpb3VzU2libGluZzpiLnByZXZpb3VzU2libGluZ30pKSxnKyspOnAucHVzaCh7aDp3LGk6X30pKSx3KyspLGgmJmghPT15W3ddJiYoZFtfPWEoaCldfHwoZFtfXT0hMCwtMT09PShfPWYoeSxoLHcpKT9zLmImJih0LnB1c2gobih7dHlwZToiY2hpbGRMaXN0Iix0YXJnZXQ6by5qLHJlbW92ZWROb2RlczpbaF0sbmV4dFNpYmxpbmc6dltPKzFdLHByZXZpb3VzU2libGluZzp2W08tMV19KSksZy0tKTpwLnB1c2goe2g6XyxpOk99KSksTysrKSk7cCYmYyhwLHIseSx2LGcpfXZhciBsO3JldHVybiB1KHIsbyksbH1mdW5jdGlvbiBjKGUsdCl7dmFyIHI9ITA7cmV0dXJuIGZ1bmN0aW9uIG4oZSl7dmFyIG89e2o6ZX07cmV0dXJuIXQuY3x8MyE9PWUubm9kZVR5cGUmJjghPT1lLm5vZGVUeXBlPyh0LmEmJnImJjE9PT1lLm5vZGVUeXBlJiYoby5hPWwoZS5hdHRyaWJ1dGVzLGZ1bmN0aW9uKGUscil7cmV0dXJuIHQuZCYmIXQuZFtyLm5hbWVdfHwoZVtyLm5hbWVdPXIudmFsdWUpLGV9KSksciYmKHQuYnx8dC5jfHx0LmEmJnQuZSkmJihvLmI9dShlLmNoaWxkTm9kZXMsbikpLHI9dC5lKTpvLmM9ZS5ub2RlVmFsdWUsb30oZSl9ZnVuY3Rpb24gYShlKXt0cnl7cmV0dXJuIGUuaWR8fChlLm1vX2lkPWUubW9faWR8fGQrKyl9Y2F0Y2godCl7dHJ5e3JldHVybiBlLm5vZGVWYWx1ZX1jYXRjaChyKXtyZXR1cm4gZCsrfX19ZnVuY3Rpb24gdShlLHQpe2Zvcih2YXIgcj1bXSxuPTA7bjxlLmxlbmd0aDtuKyspcltuXT10KGVbbl0sbixlKTtyZXR1cm4gcn1mdW5jdGlvbiBsKGUsdCl7Zm9yKHZhciByPXt9LG49MDtuPGUubGVuZ3RoO24rKylyPXQocixlW25dLG4sZSk7cmV0dXJuIHJ9ZnVuY3Rpb24gZihlLHQscixuKXtmb3IoO3I8ZS5sZW5ndGg7cisrKWlmKChuP2Vbcl1bbl06ZVtyXSk9PT10KXJldHVybiByO3JldHVybi0xfXQuX3BlcmlvZD0zMCx0LnByb3RvdHlwZT17b2JzZXJ2ZTpmdW5jdGlvbihlLHQpe2Zvcih2YXIgbj17YTohISh0LmF0dHJpYnV0ZXN8fHQuYXR0cmlidXRlRmlsdGVyfHx0LmF0dHJpYnV0ZU9sZFZhbHVlKSxiOiEhdC5jaGlsZExpc3QsZTohIXQuc3VidHJlZSxjOiEoIXQuY2hhcmFjdGVyRGF0YSYmIXQuY2hhcmFjdGVyRGF0YU9sZFZhbHVlKX0saT10aGlzLmcscz0wO3M8aS5sZW5ndGg7cysrKWlbc10ubT09PWUmJmkuc3BsaWNlKHMsMSk7dC5hdHRyaWJ1dGVGaWx0ZXImJihuLmQ9bCh0LmF0dHJpYnV0ZUZpbHRlcixmdW5jdGlvbihlLHQpe3JldHVybiBlW3RdPSEwLGV9KSksaS5wdXNoKHttOmUsbDpvKGUsbil9KSx0aGlzLmZ8fHIodGhpcyl9LHRha2VSZWNvcmRzOmZ1bmN0aW9uKCl7Zm9yKHZhciBlPVtdLHQ9dGhpcy5nLHI9MDtyPHQubGVuZ3RoO3IrKyl0W3JdLmwoZSk7cmV0dXJuIGV9LGRpc2Nvbm5lY3Q6ZnVuY3Rpb24oKXt0aGlzLmc9W10sY2xlYXJUaW1lb3V0KHRoaXMuZiksdGhpcy5mPW51bGx9fTt2YXIgZD0xO3JldHVybiB0fSh2b2lkIDApfSx7fV0sMTE0OltmdW5jdGlvbihlLHQscil7T2JqZWN0Lm9ic2VydmV8fGZ1bmN0aW9uKGUsdCxyLG4peyJ1c2Ugc3RyaWN0Ijt2YXIgbyxpLHM9WyJhZGQiLCJ1cGRhdGUiLCJkZWxldGUiLCJyZWNvbmZpZ3VyZSIsInNldFByb3RvdHlwZSIsInByZXZlbnRFeHRlbnNpb25zIl0sYz10LmlzQXJyYXl8fGZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4iW29iamVjdCBBcnJheV0iPT09ZS5jYWxsKHQpfX0oZS5wcm90b3R5cGUudG9TdHJpbmcpLGE9dC5wcm90b3R5cGUuaW5kZXhPZj90LmluZGV4T2Z8fGZ1bmN0aW9uKGUscixuKXtyZXR1cm4gdC5wcm90b3R5cGUuaW5kZXhPZi5jYWxsKGUscixuKX06ZnVuY3Rpb24oZSx0LHIpe2Zvcih2YXIgbj1yfHwwO248ZS5sZW5ndGg7bisrKWlmKGVbbl09PT10KXJldHVybiBuO3JldHVybi0xfSx1PXIuTWFwIT09biYmTWFwLnByb3RvdHlwZS5mb3JFYWNoP2Z1bmN0aW9uKCl7cmV0dXJuIG5ldyBNYXB9OmZ1bmN0aW9uKCl7dmFyIGU9W10sdD1bXTtyZXR1cm57c2l6ZTowLGhhczpmdW5jdGlvbih0KXtyZXR1cm4gYShlLHQpPi0xfSxnZXQ6ZnVuY3Rpb24ocil7cmV0dXJuIHRbYShlLHIpXX0sc2V0OmZ1bmN0aW9uKHIsbil7dmFyIG89YShlLHIpOy0xPT09bz8oZS5wdXNoKHIpLHQucHVzaChuKSx0aGlzLnNpemUrKyk6dFtvXT1ufSwiZGVsZXRlIjpmdW5jdGlvbihyKXt2YXIgbj1hKGUscik7bj4tMSYmKGUuc3BsaWNlKG4sMSksdC5zcGxpY2UobiwxKSx0aGlzLnNpemUtLSl9LGZvckVhY2g6ZnVuY3Rpb24ocil7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspci5jYWxsKGFyZ3VtZW50c1sxXSx0W25dLGVbbl0sdGhpcyl9fX0sbD1lLmdldE93blByb3BlcnR5TmFtZXM/ZnVuY3Rpb24oKXt2YXIgdD1lLmdldE93blByb3BlcnR5TmFtZXM7dHJ5e2FyZ3VtZW50cy5jYWxsZWV9Y2F0Y2gocil7dmFyIG49KHQoYSkuam9pbigiICIpKyIgIikucmVwbGFjZSgvcHJvdG90eXBlIHxsZW5ndGggfG5hbWUgL2csIiIpLnNsaWNlKDAsLTEpLnNwbGl0KCIgIik7bi5sZW5ndGgmJih0PWZ1bmN0aW9uKHQpe3ZhciByPWUuZ2V0T3duUHJvcGVydHlOYW1lcyh0KTtpZigiZnVuY3Rpb24iPT10eXBlb2YgdClmb3IodmFyIG8saT0wO2k8bi5sZW5ndGg7KShvPWEocixuW2krK10pKT4tMSYmci5zcGxpY2UobywxKTtyZXR1cm4gcn0pfXJldHVybiB0fSgpOmZ1bmN0aW9uKHQpe3ZhciByLG4sbz1bXTtpZigiaGFzT3duUHJvcGVydHkiaW4gdClmb3IociBpbiB0KXQuaGFzT3duUHJvcGVydHkocikmJm8ucHVzaChyKTtlbHNle249ZS5oYXNPd25Qcm9wZXJ0eTtmb3IociBpbiB0KW4uY2FsbCh0LHIpJiZvLnB1c2gocil9cmV0dXJuIGModCkmJm8ucHVzaCgibGVuZ3RoIiksb30sZj1lLmdldFByb3RvdHlwZU9mLGQ9ZS5kZWZpbmVQcm9wZXJ0aWVzJiZlLmdldE93blByb3BlcnR5RGVzY3JpcHRvcixwPXIucmVxdWVzdEFuaW1hdGlvbkZyYW1lfHxyLndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZXx8ZnVuY3Rpb24oKXt2YXIgZT0rbmV3IERhdGUsdD1lO3JldHVybiBmdW5jdGlvbihyKXtyZXR1cm4gc2V0VGltZW91dChmdW5jdGlvbigpe3IoKHQ9K25ldyBEYXRlKS1lKX0sMTcpfX0oKSxfPWZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1vLmdldChlKTtuPyhoKG4sZSksbShlLG4sdCxyKSk6KG49YihlKSxtKGUsbix0LHIpLDE9PT1vLnNpemUmJnAoeSkpfSxiPWZ1bmN0aW9uKHQscil7dmFyIG4saT1sKHQpLHM9W10sYz0wLHI9e2hhbmRsZXJzOnUoKSxmcm96ZW46ZS5pc0Zyb3plbj9lLmlzRnJvemVuKHQpOiExLGV4dGVuc2libGU6ZS5pc0V4dGVuc2libGU/ZS5pc0V4dGVuc2libGUodCk6ITAscHJvdG86ZiYmZih0KSxwcm9wZXJ0aWVzOmksdmFsdWVzOnMsbm90aWZpZXI6aih0LHIpfTtpZihkKWZvcihuPXIuZGVzY3JpcHRvcnM9W107YzxpLmxlbmd0aDspbltjXT1kKHQsaVtjXSksc1tjXT10W2lbYysrXV07ZWxzZSBmb3IoO2M8aS5sZW5ndGg7KXNbY109dFtpW2MrK11dO3JldHVybiBvLnNldCh0LHIpLHJ9LGg9ZnVuY3Rpb24oKXt2YXIgdD1kP2Z1bmN0aW9uKGUsdCxyLG4sbyl7dmFyIGk9dC5wcm9wZXJ0aWVzW3JdLHM9ZVtpXSxjPXQudmFsdWVzW3JdLGE9dC5kZXNjcmlwdG9yc1tyXTsidmFsdWUiaW4gbyYmKGM9PT1zPzA9PT1jJiYxL2MhPT0xL3M6Yz09PWN8fHM9PT1zKSYmKGcoZSx0LHtuYW1lOmksdHlwZToidXBkYXRlIixvYmplY3Q6ZSxvbGRWYWx1ZTpjfSxuKSx0LnZhbHVlc1tyXT1zKSwhYS5jb25maWd1cmFibGV8fG8uY29uZmlndXJhYmxlJiZvLndyaXRhYmxlPT09YS53cml0YWJsZSYmby5lbnVtZXJhYmxlPT09YS5lbnVtZXJhYmxlJiZvLmdldD09PWEuZ2V0JiZvLnNldD09PWEuc2V0fHwoZyhlLHQse25hbWU6aSx0eXBlOiJyZWNvbmZpZ3VyZSIsb2JqZWN0OmUsb2xkVmFsdWU6Y30sbiksdC5kZXNjcmlwdG9yc1tyXT1vKX06ZnVuY3Rpb24oZSx0LHIsbil7dmFyIG89dC5wcm9wZXJ0aWVzW3JdLGk9ZVtvXSxzPXQudmFsdWVzW3JdOyhzPT09aT8wPT09cyYmMS9zIT09MS9pOnM9PT1zfHxpPT09aSkmJihnKGUsdCx7bmFtZTpvLHR5cGU6InVwZGF0ZSIsb2JqZWN0OmUsb2xkVmFsdWU6c30sbiksdC52YWx1ZXNbcl09aSl9LHI9ZD9mdW5jdGlvbihlLHIsbixvLGkpe2Zvcih2YXIgcyxjPXIubGVuZ3RoO24mJmMtLTspbnVsbCE9PXJbY10mJihzPWQoZSxyW2NdKSxuLS0scz90KGUsbyxjLGkscyk6KGcoZSxvLHtuYW1lOnJbY10sdHlwZToiZGVsZXRlIixvYmplY3Q6ZSxvbGRWYWx1ZTpvLnZhbHVlc1tjXX0saSksby5wcm9wZXJ0aWVzLnNwbGljZShjLDEpLG8udmFsdWVzLnNwbGljZShjLDEpLG8uZGVzY3JpcHRvcnMuc3BsaWNlKGMsMSkpKX06ZnVuY3Rpb24oZSx0LHIsbixvKXtmb3IodmFyIGk9dC5sZW5ndGg7ciYmaS0tOyludWxsIT09dFtpXSYmKGcoZSxuLHtuYW1lOnRbaV0sdHlwZToiZGVsZXRlIixvYmplY3Q6ZSxvbGRWYWx1ZTpuLnZhbHVlc1tpXX0sbyksbi5wcm9wZXJ0aWVzLnNwbGljZShpLDEpLG4udmFsdWVzLnNwbGljZShpLDEpLHItLSl9O3JldHVybiBmdW5jdGlvbihuLG8saSl7aWYobi5oYW5kbGVycy5zaXplJiYhbi5mcm96ZW4pe3ZhciBzLGMsdSxwLF8sYixoLHksdj1uLnZhbHVlcyxqPW4uZGVzY3JpcHRvcnMsbT0wO2lmKG4uZXh0ZW5zaWJsZSlpZihzPW4ucHJvcGVydGllcy5zbGljZSgpLGM9cy5sZW5ndGgsdT1sKG8pLGope2Zvcig7bTx1Lmxlbmd0aDspXz11W20rK10scD1hKHMsXykseT1kKG8sXyksLTE9PT1wPyhnKG8sbix7bmFtZTpfLHR5cGU6ImFkZCIsb2JqZWN0Om99LGkpLG4ucHJvcGVydGllcy5wdXNoKF8pLHYucHVzaChvW19dKSxqLnB1c2goeSkpOihzW3BdPW51bGwsYy0tLHQobyxuLHAsaSx5KSk7cihvLHMsYyxuLGkpLGUuaXNFeHRlbnNpYmxlKG8pfHwobi5leHRlbnNpYmxlPSExLGcobyxuLHt0eXBlOiJwcmV2ZW50RXh0ZW5zaW9ucyIsb2JqZWN0Om99LGkpLG4uZnJvemVuPWUuaXNGcm96ZW4obykpfWVsc2V7Zm9yKDttPHUubGVuZ3RoOylfPXVbbSsrXSxwPWEocyxfKSxiPW9bX10sLTE9PT1wPyhnKG8sbix7bmFtZTpfLHR5cGU6ImFkZCIsb2JqZWN0Om99LGkpLG4ucHJvcGVydGllcy5wdXNoKF8pLHYucHVzaChiKSk6KHNbcF09bnVsbCxjLS0sdChvLG4scCxpKSk7cihvLHMsYyxuLGkpfWVsc2UgaWYoIW4uZnJvemVuKXtmb3IoO208cy5sZW5ndGg7bSsrKV89c1ttXSx0KG8sbixtLGksZChvLF8pKTtlLmlzRnJvemVuKG8pJiYobi5mcm96ZW49ITApfWYmJihoPWYobyksaCE9PW4ucHJvdG8mJihnKG8sbix7dHlwZToic2V0UHJvdG90eXBlIixuYW1lOiJfX3Byb3RvX18iLG9iamVjdDpvLG9sZFZhbHVlOm4ucHJvdG99KSxuLnByb3RvPWgpKX19fSgpLHk9ZnVuY3Rpb24oKXtvLnNpemUmJihvLmZvckVhY2goaCksaS5mb3JFYWNoKHYpLHAoeSkpfSx2PWZ1bmN0aW9uKGUsdCl7dmFyIHI9ZS5jaGFuZ2VSZWNvcmRzO3IubGVuZ3RoJiYoZS5jaGFuZ2VSZWNvcmRzPVtdLHQocikpfSxqPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg8MiYmKHQ9by5nZXQoZSkpLHQmJnQubm90aWZpZXJ8fHtub3RpZnk6ZnVuY3Rpb24odCl7dC50eXBlO3ZhciByPW8uZ2V0KGUpO2lmKHIpe3ZhciBuLGk9e29iamVjdDplfTtmb3IobiBpbiB0KSJvYmplY3QiIT09biYmKGlbbl09dFtuXSk7ZyhlLHIsaSl9fSxwZXJmb3JtQ2hhbmdlOmZ1bmN0aW9uKHQscil7aWYoInN0cmluZyIhPXR5cGVvZiB0KXRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgbm9uLXN0cmluZyBjaGFuZ2VUeXBlIik7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIHIpdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IHBlcmZvcm0gbm9uLWZ1bmN0aW9uIik7dmFyIGkscyxjPW8uZ2V0KGUpLGE9YXJndW1lbnRzWzJdLHU9YT09PW4/cigpOnIuY2FsbChhKTtpZihjJiZoKGMsZSx0KSxjJiZ1JiYib2JqZWN0Ij09dHlwZW9mIHUpe3M9e29iamVjdDplLHR5cGU6dH07Zm9yKGkgaW4gdSkib2JqZWN0IiE9PWkmJiJ0eXBlIiE9PWkmJihzW2ldPXVbaV0pO2coZSxjLHMpfX19fSxtPWZ1bmN0aW9uKGUsdCxyLG4pe3ZhciBvPWkuZ2V0KHIpO298fGkuc2V0KHIsbz17b2JzZXJ2ZWQ6dSgpLGNoYW5nZVJlY29yZHM6W119KSxvLm9ic2VydmVkLnNldChlLHthY2NlcHRMaXN0Om4uc2xpY2UoKSxkYXRhOnR9KSx0LmhhbmRsZXJzLnNldChyLG8pfSxnPWZ1bmN0aW9uKGUsdCxyLG4pe3QuaGFuZGxlcnMuZm9yRWFjaChmdW5jdGlvbih0KXt2YXIgbz10Lm9ic2VydmVkLmdldChlKS5hY2NlcHRMaXN0Oygic3RyaW5nIiE9dHlwZW9mIG58fC0xPT09YShvLG4pKSYmYShvLHIudHlwZSk+LTEmJnQuY2hhbmdlUmVjb3Jkcy5wdXNoKHIpfSl9O289dSgpLGk9dSgpLGUub2JzZXJ2ZT1mdW5jdGlvbih0LHIsbyl7aWYoIXR8fCJvYmplY3QiIT10eXBlb2YgdCYmImZ1bmN0aW9uIiE9dHlwZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcigiT2JqZWN0Lm9ic2VydmUgY2Fubm90IG9ic2VydmUgbm9uLW9iamVjdCIpO2lmKCJmdW5jdGlvbiIhPXR5cGVvZiByKXRocm93IG5ldyBUeXBlRXJyb3IoIk9iamVjdC5vYnNlcnZlIGNhbm5vdCBkZWxpdmVyIHRvIG5vbi1mdW5jdGlvbiIpO2lmKGUuaXNGcm96ZW4mJmUuaXNGcm96ZW4ocikpdGhyb3cgbmV3IFR5cGVFcnJvcigiT2JqZWN0Lm9ic2VydmUgY2Fubm90IGRlbGl2ZXIgdG8gYSBmcm96ZW4gZnVuY3Rpb24gb2JqZWN0Iik7aWYobz09PW4pbz1zO2Vsc2UgaWYoIW98fCJvYmplY3QiIT10eXBlb2Ygbyl0aHJvdyBuZXcgVHlwZUVycm9yKCJUaGlyZCBhcmd1bWVudCB0byBPYmplY3Qub2JzZXJ2ZSBtdXN0IGJlIGFuIGFycmF5IG9mIHN0cmluZ3MuIik7cmV0dXJuIF8odCxyLG8pLHR9LGUudW5vYnNlcnZlPWZ1bmN0aW9uKGUsdCl7aWYobnVsbD09PWV8fCJvYmplY3QiIT10eXBlb2YgZSYmImZ1bmN0aW9uIiE9dHlwZW9mIGUpdGhyb3cgbmV3IFR5cGVFcnJvcigiT2JqZWN0LnVub2JzZXJ2ZSBjYW5ub3QgdW5vYnNlcnZlIG5vbi1vYmplY3QiKTtpZigiZnVuY3Rpb24iIT10eXBlb2YgdCl0aHJvdyBuZXcgVHlwZUVycm9yKCJPYmplY3QudW5vYnNlcnZlIGNhbm5vdCBkZWxpdmVyIHRvIG5vbi1mdW5jdGlvbiIpO3ZhciByLG49aS5nZXQodCk7cmV0dXJuIG4mJihyPW4ub2JzZXJ2ZWQuZ2V0KGUpKSYmKG4ub2JzZXJ2ZWQuZm9yRWFjaChmdW5jdGlvbihlLHQpe2goZS5kYXRhLHQpfSkscChmdW5jdGlvbigpe3Yobix0KX0pLDE9PT1uLm9ic2VydmVkLnNpemUmJm4ub2JzZXJ2ZWQuaGFzKGUpP2lbImRlbGV0ZSJdKHQpOm4ub2JzZXJ2ZWRbImRlbGV0ZSJdKGUpLDE9PT1yLmRhdGEuaGFuZGxlcnMuc2l6ZT9vWyJkZWxldGUiXShlKTpyLmRhdGEuaGFuZGxlcnNbImRlbGV0ZSJdKHQpKSxlfSxlLmdldE5vdGlmaWVyPWZ1bmN0aW9uKHQpe2lmKG51bGw9PT10fHwib2JqZWN0IiE9dHlwZW9mIHQmJiJmdW5jdGlvbiIhPXR5cGVvZiB0KXRocm93IG5ldyBUeXBlRXJyb3IoIk9iamVjdC5nZXROb3RpZmllciBjYW5ub3QgZ2V0Tm90aWZpZXIgbm9uLW9iamVjdCIpO3JldHVybiBlLmlzRnJvemVuJiZlLmlzRnJvemVuKHQpP251bGw6aih0KX0sZS5kZWxpdmVyQ2hhbmdlUmVjb3Jkcz1mdW5jdGlvbihlKXtpZigiZnVuY3Rpb24iIT10eXBlb2YgZSl0aHJvdyBuZXcgVHlwZUVycm9yKCJPYmplY3QuZGVsaXZlckNoYW5nZVJlY29yZHMgY2Fubm90IGRlbGl2ZXIgdG8gbm9uLWZ1bmN0aW9uIik7dmFyIHQ9aS5nZXQoZSk7dCYmKHQub2JzZXJ2ZWQuZm9yRWFjaChmdW5jdGlvbihlLHQpe2goZS5kYXRhLHQpfSksdih0LGUpKX19KE9iamVjdCxBcnJheSx0aGlzKX0se31dLDExNTpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSxyLkRhdGFPYmplY3RPYnNlcnZlcj1yLkRhdGFPYmplY3RSZXBvcnRlcj1yLlN5bmNoZXI9dm9pZCAwLGUoIm11dGF0aW9ub2JzZXJ2ZXItc2hpbSIpLGUoIm9iamVjdC5vYnNlcnZlIiksZSgiYXJyYXkub2JzZXJ2ZSIpO3ZhciBvPWUoIi4vc3luY2hlci9TeW5jaGVyIiksaT1uKG8pLHM9ZSgiLi9zeW5jaGVyL0RhdGFPYmplY3RSZXBvcnRlciIpLGM9bihzKSxhPWUoIi4vc3luY2hlci9EYXRhT2JqZWN0T2JzZXJ2ZXIiKSx1PW4oYSk7ci5TeW5jaGVyPWlbImRlZmF1bHQiXSxyLkRhdGFPYmplY3RSZXBvcnRlcj1jWyJkZWZhdWx0Il0sci5EYXRhT2JqZWN0T2JzZXJ2ZXI9dVsiZGVmYXVsdCJdfSx7Ii4vc3luY2hlci9EYXRhT2JqZWN0T2JzZXJ2ZXIiOjExOCwiLi9zeW5jaGVyL0RhdGFPYmplY3RSZXBvcnRlciI6MTE5LCIuL3N5bmNoZXIvU3luY2hlciI6MTIyLCJhcnJheS5vYnNlcnZlIjoxLCJtdXRhdGlvbm9ic2VydmVyLXNoaW0iOjExMywib2JqZWN0Lm9ic2VydmUiOjExNH1dLDExNjpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvcHJvbWlzZSIpLGk9bihvKSxzPWUoImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3Qva2V5cyIpLGM9bihzKSxhPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayIpLHU9bihhKSxsPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyIpLGY9bihsKSxkPWUoIi4vU3luY09iamVjdCIpLHA9bihkKSxfPWUoIi4vRGF0YU9iamVjdENoaWxkIiksYj1uKF8pLGg9ZSgiLi4vdXRpbHMvdXRpbHMuanMiKSx5PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LHIsbixvLGkscyl7KDAsdVsiZGVmYXVsdCJdKSh0aGlzLGUpO3ZhciBjPXRoaXM7Yy5fc3luY2hlcj10LGMuX3VybD1yLGMuX3NjaGVtYT1uLGMuX3N0YXR1cz1vLGMuX3N5bmNPYmo9bmV3IHBbImRlZmF1bHQiXShpKSxjLl9jaGlsZHJlbnM9cyxjLl92ZXJzaW9uPTAsYy5fY2hpbGRJZD0wLGMuX2NoaWxkcmVuT2JqZWN0cz17fSxjLl9jaGlsZHJlbkxpc3RlbmVycz1bXSxjLl9vd25lcj10Ll9vd25lcixjLl9idXM9dC5fYnVzfXJldHVybigwLGZbImRlZmF1bHQiXSkoZSxbe2tleToiX2FsbG9jYXRlTGlzdGVuZXJzIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD10aGlzLHI9dC5fdXJsKyIvY2hpbGRyZW4vIjt0Ll9jaGlsZHJlbnMmJnQuX2NoaWxkcmVucy5mb3JFYWNoKGZ1bmN0aW9uKG4pe3ZhciBvPXIrbixpPXQuX2J1cy5hZGRMaXN0ZW5lcihvLGZ1bmN0aW9uKHIpe2lmKHIuZnJvbSE9PWUuX293bmVyKXN3aXRjaChjb25zb2xlLmxvZygiRGF0YU9iamVjdC1DaGlsZHJlbi1SQ1Y6ICIsciksci50eXBlKXtjYXNlImNyZWF0ZSI6dC5fb25DaGlsZENyZWF0ZShyKTticmVhaztjYXNlImRlbGV0ZSI6Y29uc29sZS5sb2cocik7YnJlYWs7ZGVmYXVsdDp0Ll9jaGFuZ2VDaGlsZHJlbihyKX19KTt0Ll9jaGlsZHJlbkxpc3RlbmVycy5wdXNoKGkpfSl9fSx7a2V5OiJfcmVsZWFzZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2UuX2NoaWxkcmVuTGlzdGVuZXJzLmZvckVhY2goZnVuY3Rpb24oZSl7ZS5yZW1vdmUoKX0pLCgwLGNbImRlZmF1bHQiXSkoZS5fY2hpbGRyZW5PYmplY3RzKS5mb3JFYWNoKGZ1bmN0aW9uKHQpe2UuX2NoaWxkcmVuT2JqZWN0c1t0XS5fcmVsZWFzZUxpc3RlbmVycygpfSl9fSx7a2V5OiJwYXVzZSIsdmFsdWU6ZnVuY3Rpb24oKXt0aHJvdyJOb3QgaW1wbGVtZW50ZWQifX0se2tleToicmVzdW1lIix2YWx1ZTpmdW5jdGlvbigpe3Rocm93Ik5vdCBpbXBsZW1lbnRlZCJ9fSx7a2V5OiJzdG9wIix2YWx1ZTpmdW5jdGlvbigpe3Rocm93Ik5vdCBpbXBsZW1lbnRlZCJ9fSx7a2V5OiJhZGRDaGlsZCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzO3IuX2NoaWxkSWQrKzt2YXIgbj1yLl9vd25lcisiIyIrci5fY2hpbGRJZCxvPXIuX3VybCsiL2NoaWxkcmVuLyIrZSxzPXt0eXBlOiJjcmVhdGUiLGZyb206ci5fb3duZXIsdG86byxib2R5OntyZXNvdXJjZTpuLHZhbHVlOnR9fTtyZXR1cm4gbmV3IGlbImRlZmF1bHQiXShmdW5jdGlvbihlKXt2YXIgaT1yLl9idXMucG9zdE1lc3NhZ2Uocyk7Y29uc29sZS5sb2coImNyZWF0ZS1yZXBvcnRlci1jaGlsZCggIityLl9vd25lcisiICk6ICIscyk7dmFyIGM9bmV3IGJbImRlZmF1bHQiXShyLG4sdCxyLl9vd25lcixpKTtjLm9uQ2hhbmdlKGZ1bmN0aW9uKGUpe3IuX29uQ2hhbmdlKGUse3BhdGg6byxjaGlsZElkOm59KX0pLHIuX2NoaWxkcmVuT2JqZWN0c1tuXT1jLGUoYyl9KX19LHtrZXk6Im9uQWRkQ2hpbGQiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uQWRkQ2hpbGRyZW5IYW5kbGVyPWV9fSx7a2V5OiJfb25DaGlsZENyZWF0ZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPWUuYm9keS5yZXNvdXJjZTtjb25zb2xlLmxvZygiY3JlYXRlLW9ic2VydmVyLWNoaWxkKCAiK3QuX293bmVyKyIgKTogIixlKTt2YXIgbj1uZXcgYlsiZGVmYXVsdCJdKHQscixlLmJvZHkudmFsdWUpO3QuX2NoaWxkcmVuT2JqZWN0c1tyXT1uLHNldFRpbWVvdXQoZnVuY3Rpb24oKXt0Ll9idXMucG9zdE1lc3NhZ2Uoe2lkOmUuaWQsdHlwZToicmVzcG9uc2UiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZToyMDAsc291cmNlOnQuX293bmVyfX0pfSk7dmFyIG89e3R5cGU6ZS50eXBlLGZyb206ZS5mcm9tLHVybDplLnRvLHZhbHVlOmUuYm9keS52YWx1ZSxjaGlsZElkOnIsaWRlbnRpdHk6ZS5ib2R5LmlkZW50aXR5fTt0Ll9vbkFkZENoaWxkcmVuSGFuZGxlciYmKGNvbnNvbGUubG9nKCJBREQtQ0hJTERSRU4tRVZFTlQ6ICIsbyksdC5fb25BZGRDaGlsZHJlbkhhbmRsZXIobykpfX0se2tleToiX29uQ2hhbmdlIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXM7aWYoci5fdmVyc2lvbisrLCJvbiI9PT1yLl9zdGF0dXMpe3ZhciBuPXt0eXBlOiJ1cGRhdGUiLGZyb206ci5fdXJsLHRvOnIuX3VybCsiL2NoYW5nZXMiLGJvZHk6e3ZlcnNpb246ci5fdmVyc2lvbixzb3VyY2U6ci5fb3duZXIsYXR0cmlidXRlOmUuZmllbGR9fTtlLm9UeXBlPT09ZC5PYmplY3RUeXBlLk9CSkVDVD9lLmNUeXBlIT09ZC5DaGFuZ2VUeXBlLlJFTU9WRSYmKG4uYm9keS52YWx1ZT1lLmRhdGEpOihuLmJvZHkuYXR0cmlidXRlVHlwZT1lLm9UeXBlLG4uYm9keS52YWx1ZT1lLmRhdGEsZS5jVHlwZSE9PWQuQ2hhbmdlVHlwZS5VUERBVEUmJihuLmJvZHkub3BlcmF0aW9uPWUuY1R5cGUpKSx0JiYobi50bz10LnBhdGgsbi5ib2R5LnJlc291cmNlPXQuY2hpbGRJZCksci5fYnVzLnBvc3RNZXNzYWdlKG4pfX19LHtrZXk6Il9jaGFuZ2VPYmplY3QiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcztpZihyLl92ZXJzaW9uKzE9PT10LmJvZHkudmVyc2lvbil7ci5fdmVyc2lvbisrO3ZhciBuPXQuYm9keS5hdHRyaWJ1dGUsbz0oMCxoLmRlZXBDbG9uZSkodC5ib2R5LnZhbHVlKSxpPWUuZmluZEJlZm9yZShuKTtpZih0LmJvZHkuYXR0cmlidXRlVHlwZT09PWQuT2JqZWN0VHlwZS5BUlJBWSlpZih0LmJvZHkub3BlcmF0aW9uPT09ZC5DaGFuZ2VUeXBlLkFERCl7dmFyIHM9aS5vYmosYz1pLmxhc3Q7QXJyYXkucHJvdG90eXBlLnNwbGljZS5hcHBseShzLFtjLDBdLmNvbmNhdChvKSl9ZWxzZSBpZih0LmJvZHkub3BlcmF0aW9uPT09ZC5DaGFuZ2VUeXBlLlJFTU9WRSl7dmFyIGE9aS5vYmosdT1pLmxhc3Q7YS5zcGxpY2UodSxvKX1lbHNlIGkub2JqW2kubGFzdF09bztlbHNlIHQuYm9keS52YWx1ZT9pLm9ialtpLmxhc3RdPW86ZGVsZXRlIGkub2JqW2kubGFzdF19ZWxzZSBjb25zb2xlLmxvZygiVU5TWU5DSFJPTklaRUQgVkVSU0lPTjogKGRhdGEgPT4gIityLl92ZXJzaW9uKyIsIG1zZyA9PiAiK3QuYm9keS52ZXJzaW9uKyIpIil9fSx7a2V5OiJfY2hhbmdlQ2hpbGRyZW4iLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7Y29uc29sZS5sb2coIkNoYW5nZSBjaGlsZHJlbjogIix0Ll9vd25lcixlKTt2YXIgcj1lLmJvZHkucmVzb3VyY2Usbj10Ll9jaGlsZHJlbk9iamVjdHNbcl07bj90Ll9jaGFuZ2VPYmplY3Qobi5fc3luY09iaixlKTpjb25zb2xlLmxvZygiTm8gY2hpbGRyZW4gZm91bmQgZm9yOiAiLHIpfX0se2tleToidXJsIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdXJsfX0se2tleToic2NoZW1hIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2NoZW1hfX0se2tleToic3RhdHVzIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc3RhdHVzfX0se2tleToiZGF0YSIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3N5bmNPYmouZGF0YX19LHtrZXk6ImNoaWxkcmVucyIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NoaWxkcmVuT2JqZWN0c319XSksZX0oKTtyWyJkZWZhdWx0Il09eSx0LmV4cG9ydHM9clsiZGVmYXVsdCJdfSx7Ii4uL3V0aWxzL3V0aWxzLmpzIjoxMjMsIi4vRGF0YU9iamVjdENoaWxkIjoxMTcsIi4vU3luY09iamVjdCI6MTIxLCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2tleXMiOjcsImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9wcm9taXNlIjo5LCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siOjEyLCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiOjEzfV0sMTE3OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOnsiZGVmYXVsdCI6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBvPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayIpLGk9bihvKSxzPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyIpLGM9bihzKSxhPWUoIi4vU3luY09iamVjdCIpLHU9bihhKSxsPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LHIsbixvLHMpeygwLGlbImRlZmF1bHQiXSkodGhpcyxlKTt2YXIgYz10aGlzO2MuX3BhcmVudD10LGMuX2NoaWxkSWQ9cixjLl9vd25lcj1vLGMuX21zZ0lkPXMsYy5fc3luY09iaj1uZXcgdVsiZGVmYXVsdCJdKG4pLGMuX2J1cz10Ll9idXMsYy5fYWxsb2NhdGVMaXN0ZW5lcnMoKX1yZXR1cm4oMCxjWyJkZWZhdWx0Il0pKGUsW3trZXk6Il9hbGxvY2F0ZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2UuX293bmVyJiYoZS5fbGlzdGVuZXI9ZS5fYnVzLmFkZExpc3RlbmVyKGUuX293bmVyLGZ1bmN0aW9uKHQpeyJyZXNwb25zZSI9PT10LnR5cGUmJnQuaWQ9PT1lLl9tc2dJZCYmKGNvbnNvbGUubG9nKCJEYXRhT2JqZWN0Q2hpbGQub25SZXNwb25zZToiLHQpLGUuX29uUmVzcG9uc2UodCkpfSkpfX0se2tleToiX3JlbGVhc2VMaXN0ZW5lcnMiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLl9saXN0ZW5lciYmZS5fbGlzdGVuZXIucmVtb3ZlKCl9fSx7a2V5OiJkZWxldGUiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztkZWxldGUgZS5fcGFyZW50Ll9jaGlsZHJlbltlLl9jaGlsZElkXSxlLl9yZWxlYXNlTGlzdGVuZXJzKCl9fSx7a2V5OiJvbkNoYW5nZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fc3luY09iai5vYnNlcnZlKGZ1bmN0aW9uKHQpe2UodCl9KX19LHtrZXk6Im9uUmVzcG9uc2UiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uUmVzcG9uc2VIYW5kbGVyPWV9fSx7a2V5OiJfb25SZXNwb25zZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPXt0eXBlOmUudHlwZSx1cmw6ZS5ib2R5LnNvdXJjZSxjb2RlOmUuYm9keS5jb2RlfTt0Ll9vblJlc3BvbnNlSGFuZGxlciYmdC5fb25SZXNwb25zZUhhbmRsZXIocil9fSx7a2V5OiJjaGlsZElkIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2hpbGRJZH19LHtrZXk6ImRhdGEiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zeW5jT2JqLmRhdGF9fV0pLGV9KCk7clsiZGVmYXVsdCJdPWwsdC5leHBvcnRzPXJbImRlZmF1bHQiXX0seyIuL1N5bmNPYmplY3QiOjEyMSwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjoxMiwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjoxM31dLDExODpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2tleXMiKSxpPW4obykscz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2dldC1wcm90b3R5cGUtb2YiKSxjPW4ocyksYT1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siKSx1PW4oYSksbD1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiKSxmPW4obCksZD1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIpLHA9bihkKSxfPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9nZXQiKSxiPW4oXyksaD1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHMiKSx5PW4oaCksdj1lKCIuL0RhdGFPYmplY3QiKSxqPW4odiksbT1lKCIuL0RhdGFPYmplY3RDaGlsZCIpLGc9bihtKSx3PXtBTlk6ImFueSIsU1RBUlQ6InN0YXJ0IixFWEFDVDoiZXhhY3QifSxPPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoZSxyLG4sbyxzLGEsbCl7KDAsdVsiZGVmYXVsdCJdKSh0aGlzLHQpO3ZhciBmPSgwLHBbImRlZmF1bHQiXSkodGhpcywoMCxjWyJkZWZhdWx0Il0pKHQpLmNhbGwodGhpcyxlLHIsbixvLHMuZGF0YSxhKSksZD1mO3JldHVybiBkLl92ZXJzaW9uPWwsZC5fZmlsdGVycz17fSxkLl9zeW5jT2JqLm9ic2VydmUoZnVuY3Rpb24oZSl7ZC5fb25GaWx0ZXIoZSl9KSwoMCxpWyJkZWZhdWx0Il0pKHMuY2hpbGRyZW5zKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciB0PXMuY2hpbGRyZW5zW2VdO2QuX2NoaWxkcmVuT2JqZWN0c1tlXT1uZXcgZ1siZGVmYXVsdCJdKGQsZSx0KX0pLGQuX2FsbG9jYXRlTGlzdGVuZXJzKCksZn1yZXR1cm4oMCx5WyJkZWZhdWx0Il0pKHQsZSksKDAsZlsiZGVmYXVsdCJdKSh0LFt7a2V5OiJfYWxsb2NhdGVMaXN0ZW5lcnMiLHZhbHVlOmZ1bmN0aW9uKCl7KDAsYlsiZGVmYXVsdCJdKSgoMCxjWyJkZWZhdWx0Il0pKHQucHJvdG90eXBlKSwiX2FsbG9jYXRlTGlzdGVuZXJzIix0aGlzKS5jYWxsKHRoaXMpO3ZhciBlPXRoaXM7ZS5fY2hhbmdlTGlzdGVuZXI9ZS5fYnVzLmFkZExpc3RlbmVyKGUuX3VybCsiL2NoYW5nZXMiLGZ1bmN0aW9uKHQpeyJ1cGRhdGUiPT09dC50eXBlJiYoY29uc29sZS5sb2coIkRhdGFPYmplY3RPYnNlcnZlci0iK2UuX3VybCsiLVJDVjogIix0KSxlLl9jaGFuZ2VPYmplY3QoZS5fc3luY09iaix0KSl9KX19LHtrZXk6Il9yZWxlYXNlTGlzdGVuZXJzIix2YWx1ZTpmdW5jdGlvbigpeygwLGJbImRlZmF1bHQiXSkoKDAsY1siZGVmYXVsdCJdKSh0LnByb3RvdHlwZSksIl9yZWxlYXNlTGlzdGVuZXJzIix0aGlzKS5jYWxsKHRoaXMpO3ZhciBlPXRoaXM7ZS5fY2hhbmdlTGlzdGVuZXIucmVtb3ZlKCl9fSx7a2V5OiJkZWxldGUiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLl9yZWxlYXNlTGlzdGVuZXJzKCksZGVsZXRlIGUuX3N5bmNoZXIuX29ic2VydmVyc1tlLl91cmxdfX0se2tleToidW5zdWJzY3JpYmUiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PXt0eXBlOiJ1bnN1YnNjcmliZSIsZnJvbTplLl9vd25lcix0bzplLl9zeW5jaGVyLl9zdWJVUkwsYm9keTp7cmVzb3VyY2U6ZS5fdXJsfX07ZS5fYnVzLnBvc3RNZXNzYWdlKHQsZnVuY3Rpb24odCl7Y29uc29sZS5sb2coIkRhdGFPYmplY3RPYnNlcnZlci1VTlNVQlNDUklCRTogIix0KSwyMDA9PT10LmJvZHkuY29kZSYmKGUuX3JlbGVhc2VMaXN0ZW5lcnMoKSxkZWxldGUgZS5fc3luY2hlci5fb2JzZXJ2ZXJzW2UuX3VybF0pfSl9fSx7a2V5OiJvbkNoYW5nZSIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj1lLG49e3R5cGU6dy5FWEFDVCxjYWxsYmFjazp0fSxvPWUuaW5kZXhPZigiKiIpO289PT1lLmxlbmd0aC0xJiYoMD09PW8/bi50eXBlPXcuQU5ZOihuLnR5cGU9dy5TVEFSVCxyPWUuc3Vic3RyKDAsZS5sZW5ndGgtMSkpKSx0aGlzLl9maWx0ZXJzW3JdPW59fSx7a2V5OiJfb25GaWx0ZXIiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7KDAsaVsiZGVmYXVsdCJdKSh0Ll9maWx0ZXJzKS5mb3JFYWNoKGZ1bmN0aW9uKHIpe3ZhciBuPXQuX2ZpbHRlcnNbcl07bi50eXBlPT09dy5BTlk/bi5jYWxsYmFjayhlKTpuLnR5cGU9PT13LlNUQVJUPzA9PT1lLmZpZWxkLmluZGV4T2YocikmJm4uY2FsbGJhY2soZSk6bi50eXBlPT09dy5FWEFDVCYmZS5maWVsZD09PXImJm4uY2FsbGJhY2soZSl9KX19XSksdH0oalsiZGVmYXVsdCJdKTtyWyJkZWZhdWx0Il09Tyx0LmV4cG9ydHM9clsiZGVmYXVsdCJdfSx7Ii4vRGF0YU9iamVjdCI6MTE2LCIuL0RhdGFPYmplY3RDaGlsZCI6MTE3LCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2dldC1wcm90b3R5cGUtb2YiOjYsImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3Qva2V5cyI6NywiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjoxMiwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjoxMywiYmFiZWwtcnVudGltZS9oZWxwZXJzL2dldCI6MTQsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9pbmhlcml0cyI6MTUsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIjoxNn1dLDExOTpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2tleXMiKSxpPW4obykscz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2dldC1wcm90b3R5cGUtb2YiKSxjPW4ocyksYT1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siKSx1PW4oYSksbD1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiKSxmPW4obCksZD1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIpLHA9bihkKSxfPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9nZXQiKSxiPW4oXyksaD1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHMiKSx5PW4oaCksdj1lKCIuL0RhdGFPYmplY3QiKSxqPW4odiksbT1lKCIuLi91dGlscy91dGlscy5qcyIpLGc9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlLHIsbixvLGkscyl7KDAsdVsiZGVmYXVsdCJdKSh0aGlzLHQpO3ZhciBhPSgwLHBbImRlZmF1bHQiXSkodGhpcywoMCxjWyJkZWZhdWx0Il0pKHQpLmNhbGwodGhpcyxlLHIsbixvLGkscykpLGw9YTtyZXR1cm4gbC5fc3Vic2NyaXB0aW9ucz17fSxsLl9zeW5jT2JqLm9ic2VydmUoZnVuY3Rpb24oZSl7Y29uc29sZS5sb2coIkRhdGFPYmplY3RSZXBvcnRlci0iK3IrIi1TRU5EOiAiLGUpLGwuX29uQ2hhbmdlKGUpfSksbC5fYWxsb2NhdGVMaXN0ZW5lcnMoKSxhfXJldHVybigwLHlbImRlZmF1bHQiXSkodCxlKSwoMCxmWyJkZWZhdWx0Il0pKHQsW3trZXk6Il9hbGxvY2F0ZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXsoMCxiWyJkZWZhdWx0Il0pKCgwLGNbImRlZmF1bHQiXSkodC5wcm90b3R5cGUpLCJfYWxsb2NhdGVMaXN0ZW5lcnMiLHRoaXMpLmNhbGwodGhpcyk7dmFyIGU9dGhpcztlLl9yZXNwb25zZUxpc3RlbmVyPWUuX2J1cy5hZGRMaXN0ZW5lcihlLl91cmwsZnVuY3Rpb24odCl7InJlc3BvbnNlIj09PXQudHlwZSYmZS5fb25SZXNwb25zZSh0KX0pfX0se2tleToiX3JlbGVhc2VMaXN0ZW5lcnMiLHZhbHVlOmZ1bmN0aW9uKCl7KDAsYlsiZGVmYXVsdCJdKSgoMCxjWyJkZWZhdWx0Il0pKHQucHJvdG90eXBlKSwiX3JlbGVhc2VMaXN0ZW5lcnMiLHRoaXMpLmNhbGwodGhpcyk7dmFyIGU9dGhpcztlLl9yZXNwb25zZUxpc3RlbmVyLnJlbW92ZSgpfX0se2tleToiaW52aXRlT2JzZXJ2ZXJzIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9e3R5cGU6ImNyZWF0ZSIsZnJvbTp0Ll9zeW5jaGVyLl9vd25lcix0bzp0Ll9zeW5jaGVyLl9zdWJVUkwsYm9keTp7cmVzb3VyY2U6dC5fdXJsLHNjaGVtYTp0Ll9zY2hlbWEsdmFsdWU6dC5fc3luY09iai5kYXRhLGF1dGhvcmlzZTplfX07dC5fYnVzLnBvc3RNZXNzYWdlKHIpfX0se2tleToiZGVsZXRlIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD17dHlwZToiZGVsZXRlIixmcm9tOmUuX293bmVyLHRvOmUuX3N5bmNoZXIuX3N1YlVSTCxib2R5OntyZXNvdXJjZTplLl91cmx9fTtlLl9idXMucG9zdE1lc3NhZ2UodCxmdW5jdGlvbih0KXtjb25zb2xlLmxvZygiRGF0YU9iamVjdFJlcG9ydGVyLURFTEVURTogIix0KSwyMDA9PT10LmJvZHkuY29kZSYmKGUuX3JlbGVhc2VMaXN0ZW5lcnMoKSxkZWxldGUgZS5fc3luY2hlci5fcmVwb3J0ZXJzW2UuX3VybF0pfSl9fSx7a2V5OiJvblN1YnNjcmlwdGlvbiIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb25TdWJzY3JpcHRpb25IYW5kbGVyPWV9fSx7a2V5OiJvblJlc3BvbnNlIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vblJlc3BvbnNlSGFuZGxlcj1lfX0se2tleToiX29uRm9yd2FyZCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztzd2l0Y2goY29uc29sZS5sb2coIkRhdGFPYmplY3RSZXBvcnRlci1SQ1Y6ICIsZSksZS5ib2R5LnR5cGUpe2Nhc2Uic3Vic2NyaWJlIjp0Ll9vblN1YnNjcmliZShlKTticmVhaztjYXNlInVuc3Vic2NyaWJlIjp0Ll9vblVuU3Vic2NyaWJlKGUpfX19LHtrZXk6Il9vblN1YnNjcmliZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPWUuYm9keS5mcm9tLG49e3R5cGU6ZS5ib2R5LnR5cGUsdXJsOnIsYWNjZXB0OmZ1bmN0aW9uKCl7dmFyIG49e3VybDpyLHN0YXR1czoib24ifTt0Ll9zdWJzY3JpcHRpb25zW3JdPW47dmFyIG89e307cmV0dXJuKDAsaVsiZGVmYXVsdCJdKSh0Ll9jaGlsZHJlbk9iamVjdHMpLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIHI9dC5fY2hpbGRyZW5PYmplY3RzW2VdLmRhdGE7b1tlXT0oMCxtLmRlZXBDbG9uZSkocil9KSx0Ll9idXMucG9zdE1lc3NhZ2Uoe2lkOmUuaWQsdHlwZToicmVzcG9uc2UiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZToyMDAsc2NoZW1hOnQuX3NjaGVtYSx2ZXJzaW9uOnQuX3ZlcnNpb24sdmFsdWU6e2RhdGE6KDAsbS5kZWVwQ2xvbmUpKHQuZGF0YSksY2hpbGRyZW5zOm99fX0pLG59LHJlamVjdDpmdW5jdGlvbihyKXt0Ll9idXMucG9zdE1lc3NhZ2Uoe2lkOmUuaWQsdHlwZToicmVzcG9uc2UiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZTo0MDMsZGVzYzpyfX0pfX07dC5fb25TdWJzY3JpcHRpb25IYW5kbGVyJiYoY29uc29sZS5sb2coIlNVQlNDUklQVElPTi1FVkVOVDogIixuKSx0Ll9vblN1YnNjcmlwdGlvbkhhbmRsZXIobikpfX0se2tleToiX29uVW5TdWJzY3JpYmUiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj1lLmJvZHkuZnJvbSxuPXQuX3N1YnNjcmlwdGlvbnNbcl07ZGVsZXRlIHQuX3N1YnNjcmlwdGlvbnNbcl07dmFyIG89e3R5cGU6ZS5ib2R5LnR5cGUsdXJsOnIsb2JqZWN0Om59O3QuX29uU3Vic2NyaXB0aW9uSGFuZGxlciYmKGNvbnNvbGUubG9nKCJVTi1TVUJTQ1JJUFRJT04tRVZFTlQ6ICIsbyksdC5fb25TdWJzY3JpcHRpb25IYW5kbGVyKG8pKX19LHtrZXk6Il9vblJlc3BvbnNlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9e3R5cGU6ZS50eXBlLHVybDplLmZyb20sY29kZTplLmJvZHkuY29kZX07dC5fb25SZXNwb25zZUhhbmRsZXImJihjb25zb2xlLmxvZygiUkVTUE9OU0UtRVZFTlQ6ICIsciksdC5fb25SZXNwb25zZUhhbmRsZXIocikpfX0se2tleToic3Vic2NyaXB0aW9ucyIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3N1YnNjcmlwdGlvbnN9fV0pLHR9KGpbImRlZmF1bHQiXSk7clsiZGVmYXVsdCJdPWcsdC5leHBvcnRzPXJbImRlZmF1bHQiXX0seyIuLi91dGlscy91dGlscy5qcyI6MTIzLCIuL0RhdGFPYmplY3QiOjExNiwiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9nZXQtcHJvdG90eXBlLW9mIjo2LCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2tleXMiOjcsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayI6MTIsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyI6MTMsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9nZXQiOjE0LCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHMiOjE1LCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiI6MTZ9XSwxMjA6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6eyJkZWZhdWx0IjplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkociwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7dmFyIG89ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIiksaT1uKG8pLHM9ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIiksYz1uKHMpLGE9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQscixuLG8peygwLGlbImRlZmF1bHQiXSkodGhpcyxlKTt2YXIgcz10aGlzO3MuX293bmVyPXQscy5fdXJsPXIscy5fYnVzPW4scy5fY2hpbGRyZW49byxzLl9jaGFuZ2VzPVtdLHMuX2FsbG9jYXRlTGlzdGVuZXJzKCl9cmV0dXJuKDAsY1siZGVmYXVsdCJdKShlLFt7a2V5OiJfYWxsb2NhdGVMaXN0ZW5lcnMiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLl9saXN0ZW5lcj1lLl9idXMuYWRkTGlzdGVuZXIoZS5fdXJsLGZ1bmN0aW9uKHQpe2NvbnNvbGUubG9nKCJEYXRhUHJvdmlzaW9uYWwtIitlLl91cmwrIi1SQ1Y6ICIsdCksZS5fY2hhbmdlcy5wdXNoKHQpfSl9fSx7a2V5OiJfcmVsZWFzZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2UuX2xpc3RlbmVyLnJlbW92ZSgpfX0se2tleToiYXBwbHkiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7dC5fY2hhbmdlcy5mb3JFYWNoKGZ1bmN0aW9uKHQpe2UuX2NoYW5nZU9iamVjdChlLl9zeW5jT2JqLHQpfSl9fSx7a2V5OiJjaGlsZHJlbiIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NoaWxkcmVufX1dKSxlfSgpO3JbImRlZmF1bHQiXT1hLHQuZXhwb3J0cz1yWyJkZWZhdWx0Il19LHsiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjoxMiwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjoxM31dLDEyMTpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSxyLk9iamVjdFR5cGU9ci5DaGFuZ2VUeXBlPXZvaWQgMDt2YXIgbz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2tleXMiKSxpPW4obykscz1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siKSxjPW4ocyksYT1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiKSx1PW4oYSksbD1lKCIuLi91dGlscy91dGlscy5qcyIpLGY9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQpeygwLGNbImRlZmF1bHQiXSkodGhpcyxlKTt2YXIgcj10aGlzO3IuX29ic2VydmVycz1bXSxyLl9maWx0ZXJzPXt9LHQ/ci5fZGF0YT0oMCxsLmRlZXBDbG9uZSkodCk6ci5fZGF0YT17fSxyLl9pbnRlcm5hbE9ic2VydmUobmV3IGQsci5fZGF0YSl9cmV0dXJuKDAsdVsiZGVmYXVsdCJdKShlLFt7a2V5OiJvYnNlcnZlIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vYnNlcnZlcnMucHVzaChlKX19LHtrZXk6ImZpbmQiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PWUuc3BsaXQoIi4iKTtyZXR1cm4gdGhpcy5fZmluZFdpdGhTcGxpdCh0KX19LHtrZXk6ImZpbmRCZWZvcmUiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXt9LHI9ZS5zcGxpdCgiLiIpO3JldHVybiB0Lmxhc3Q9ci5wb3AoKSx0Lm9iaj10aGlzLl9maW5kV2l0aFNwbGl0KHIpLHR9fSx7a2V5OiJfZmluZFdpdGhTcGxpdCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fZGF0YTtyZXR1cm4gZS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3Q9dFtlXX0pLHR9fSx7a2V5OiJfZmlyZUV2ZW50Iix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vYnNlcnZlcnMuZm9yRWFjaChmdW5jdGlvbih0KXt0KGUpfSl9fSx7a2V5OiJfaXNPYnNlcnZhYmxlIix2YWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gZS5jb25zdHJ1Y3Rvcj09PU9iamVjdHx8ZS5jb25zdHJ1Y3Rvcj09PUFycmF5fX0se2tleToiX2ludGVybmFsT2JzZXJ2ZSIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzO2lmKHIuX2lzT2JzZXJ2YWJsZSh0KSl7dmFyIG49ZnVuY3Rpb24odCl7ci5fb25DaGFuZ2VzKGUsdCl9O2lmKHQuY29uc3RydWN0b3I9PT1PYmplY3Qpe09iamVjdC5vYnNlcnZlKHQsbik7Zm9yKHZhciBvIGluIHQpci5faXNPYnNlcnZhYmxlKHRbb10pJiZyLl9pbnRlcm5hbE9ic2VydmUoZVsibmV3Il0obyksdFtvXSl9ZWxzZSBpZih0LmNvbnN0cnVjdG9yPT09QXJyYXkpe0FycmF5Lm9ic2VydmUodCxuKTtmb3IodmFyIGkgaW4gdClpZihyLl9pc09ic2VydmFibGUodFtpXSkpe3ZhciBzPWVbIm5ldyJdKG5ldyBwKHRbaV0saSkpO3IuX2ludGVybmFsT2JzZXJ2ZShzLHRbaV0pfX19fX0se2tleToiX29uQ2hhbmdlcyIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzO2Zvcih2YXIgbiBpbiB0KXt2YXIgbz10W25dLm9iamVjdCxpPXZvaWQgMDtpZihvLmNvbnN0cnVjdG9yPT09T2JqZWN0JiYoaT1iLk9CSkVDVCksby5jb25zdHJ1Y3Rvcj09PUFycmF5JiYoaT1iLkFSUkFZKSwic3BsaWNlIj09PXRbbl0udHlwZSkhZnVuY3Rpb24oKXt2YXIgcz10W25dLmluZGV4LGM9ZVsibmV3Il0oIiIrcyksYT1jLnRvU3RyaW5nKCksdT10W25dLnJlbW92ZWQubGVuZ3RoO2lmKDAhPT11KXt2YXIgZj10W25dLnJlbW92ZWQ7Zi5mb3JFYWNoKGZ1bmN0aW9uKHQsbil7ci5faXNPYnNlcnZhYmxlKHQpJiZlLnJlbW92ZUluZGV4KHMrbil9KSxyLl9maXJlRXZlbnQoe2NUeXBlOl8uUkVNT1ZFLG9UeXBlOmksZmllbGQ6YSxkYXRhOnV9KX12YXIgZD10W25dLmFkZGVkQ291bnQ7aWYoMCE9PWQpe3ZhciBiPW8uc2xpY2UocyxzK2QpO2IuZm9yRWFjaChmdW5jdGlvbih0LG4pe2lmKHIuX2lzT2JzZXJ2YWJsZSh0KSl7dmFyIG89ZVsibmV3Il0obmV3IHAodCxzK24pKTtyLl9pbnRlcm5hbE9ic2VydmUobyx0KX19KSxyLl9maXJlRXZlbnQoe2NUeXBlOl8uQURELG9UeXBlOmksZmllbGQ6YSxkYXRhOigwLGwuZGVlcENsb25lKShiKX0pfXMhPT1vLmxlbmd0aC0xJiZlLnJlSW5kZXhGcm9tKG8pfSgpO2Vsc2V7dmFyIHM9ZVsibmV3Il0odFtuXS5uYW1lKSxjPXMudG9TdHJpbmcoKTtpZigtMSE9PWMuaW5kZXhPZigiU3ltYm9sIikpY29udGludWU7dmFyIGE9b1t0W25dLm5hbWVdOyJ1cGRhdGUiPT09dFtuXS50eXBlJiZ0aGlzLl9maXJlRXZlbnQoe2NUeXBlOl8uVVBEQVRFLG9UeXBlOmksZmllbGQ6YyxkYXRhOigwLGwuZGVlcENsb25lKShhKX0pLCJhZGQiPT09dFtuXS50eXBlJiYodGhpcy5faW50ZXJuYWxPYnNlcnZlKHMsYSksdGhpcy5fZmlyZUV2ZW50KHtjVHlwZTpfLkFERCxvVHlwZTppLGZpZWxkOmMsZGF0YTooMCxsLmRlZXBDbG9uZSkoYSl9KSksImRlbGV0ZSI9PT10W25dLnR5cGUmJnRoaXMuX2ZpcmVFdmVudCh7Y1R5cGU6Xy5SRU1PVkUsb1R5cGU6aSxmaWVsZDpjfSl9fX19LHtrZXk6ImRhdGEiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9kYXRhfX1dKSxlfSgpLGQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKCl7KDAsY1siZGVmYXVsdCJdKSh0aGlzLGUpLHRoaXMuX3BhdGg9W10sdGhpcy5fb2JzZXJ2YWJsZXM9e319cmV0dXJuKDAsdVsiZGVmYXVsdCJdKShlLFt7a2V5OiJyZW1vdmVJbmRleCIsdmFsdWU6ZnVuY3Rpb24oZSl7ZGVsZXRlIHRoaXMuX29ic2VydmFibGVzW2VdfX0se2tleToicmVJbmRleEZyb20iLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7KDAsaVsiZGVmYXVsdCJdKSh0aGlzLl9vYnNlcnZhYmxlcykuZm9yRWFjaChmdW5jdGlvbihyKXt2YXIgbj10Ll9vYnNlcnZhYmxlc1tyXSxvPWUuaW5kZXhPZihuLm9iaik7bi5pZHghPW8mJihuLmlkeD1vLGRlbGV0ZSB0Ll9vYnNlcnZhYmxlc1tyXSwNCnQuX29ic2VydmFibGVzW29dPW4pfSl9fSx7a2V5OiJuZXciLHZhbHVlOmZ1bmN0aW9uKGUpe2UuY29uc3RydWN0b3I9PXAmJih0aGlzLl9vYnNlcnZhYmxlc1tlLmlkeF09ZSk7dmFyIHQ9dGhpcy5jbG9uZSgpO3JldHVybiB0Ll9wYXRoLnB1c2goZSksdH19LHtrZXk6ImNsb25lIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PW5ldyBlO3JldHVybiB0aGlzLl9wYXRoLmZvckVhY2goZnVuY3Rpb24oZSl7dC5fcGF0aC5wdXNoKGUpfSksdH19LHtrZXk6InRvU3RyaW5nIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPSIiO3JldHVybiB0aGlzLl9wYXRoLmZvckVhY2goZnVuY3Rpb24odCxyKXswPT09cj9lPXQudG9TdHJpbmcoKTplKz0iLiIrdC50b1N0cmluZygpfSksZX19XSksZX0oKSxwPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LHIpeygwLGNbImRlZmF1bHQiXSkodGhpcyxlKSx0aGlzLm9iaj10LHRoaXMuaWR4PXJ9cmV0dXJuKDAsdVsiZGVmYXVsdCJdKShlLFt7a2V5OiJ0b1N0cmluZyIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pZHgudG9TdHJpbmcoKX19XSksZX0oKSxfPXIuQ2hhbmdlVHlwZT17VVBEQVRFOiJ1cGRhdGUiLEFERDoiYWRkIixSRU1PVkU6InJlbW92ZSJ9LGI9ci5PYmplY3RUeXBlPXtPQkpFQ1Q6Im9iamVjdCIsQVJSQVk6ImFycmF5In07clsiZGVmYXVsdCJdPWZ9LHsiLi4vdXRpbHMvdXRpbHMuanMiOjEyMywiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9rZXlzIjo3LCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siOjEyLCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiOjEzfV0sMTIyOltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOnsiZGVmYXVsdCI6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBvPWUoImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9wcm9taXNlIiksaT1uKG8pLHM9ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIiksYz1uKHMpLGE9ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIiksdT1uKGEpLGw9ZSgiLi9EYXRhT2JqZWN0UmVwb3J0ZXIiKSxmPW4obCksZD1lKCIuL0RhdGFPYmplY3RPYnNlcnZlciIpLHA9bihkKSxfPWUoIi4vRGF0YVByb3Zpc2lvbmFsIiksYj1uKF8pLGg9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQscixuKXsoMCxjWyJkZWZhdWx0Il0pKHRoaXMsZSk7dmFyIG89dGhpcztvLl9vd25lcj10LG8uX2J1cz1yLG8uX3N1YlVSTD1uLnJ1bnRpbWVVUkwrIi9zbSIsby5fcmVwb3J0ZXJzPXt9LG8uX29ic2VydmVycz17fSxvLl9wcm92aXNpb25hbHM9e30sci5hZGRMaXN0ZW5lcih0LGZ1bmN0aW9uKGUpe2lmKGUuZnJvbSE9PXQpc3dpdGNoKGNvbnNvbGUubG9nKCJTeW5jaGVyLVJDVjogIixlKSxlLnR5cGUpe2Nhc2UiZm9yd2FyZCI6by5fb25Gb3J3YXJkKGUpO2JyZWFrO2Nhc2UiY3JlYXRlIjpvLl9vblJlbW90ZUNyZWF0ZShlKTticmVhaztjYXNlImRlbGV0ZSI6by5fb25SZW1vdGVEZWxldGUoZSl9fSl9cmV0dXJuKDAsdVsiZGVmYXVsdCJdKShlLFt7a2V5OiJjcmVhdGUiLHZhbHVlOmZ1bmN0aW9uKGUsdCxyKXt2YXIgbj10aGlzO3IucmVwb3J0ZXI9bi5fb3duZXIsci5zY2hlbWE9ZTt2YXIgbz17dHlwZToiY3JlYXRlIixmcm9tOm4uX293bmVyLHRvOm4uX3N1YlVSTCxib2R5OntzY2hlbWE6ZSx2YWx1ZTpyLGF1dGhvcmlzZTp0fX07cmV0dXJuIG5ldyBpWyJkZWZhdWx0Il0oZnVuY3Rpb24odCxpKXtuLl9idXMucG9zdE1lc3NhZ2UobyxmdW5jdGlvbihvKXtpZihjb25zb2xlLmxvZygiY3JlYXRlLXJlc3BvbnNlOiAiLG8pLDIwMD09PW8uYm9keS5jb2RlKXt2YXIgcz1vLmJvZHkucmVzb3VyY2UsYz1uZXcgZlsiZGVmYXVsdCJdKG4scyxlLCJvbiIscixvLmJvZHkuY2hpbGRyZW5SZXNvdXJjZXMpO24uX3JlcG9ydGVyc1tzXT1jLHQoYyl9ZWxzZSBpKG8uYm9keS5kZXNjKX0pfSl9fSx7a2V5OiJzdWJzY3JpYmUiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcyxuPXt0eXBlOiJzdWJzY3JpYmUiLGZyb206ci5fb3duZXIsdG86ci5fc3ViVVJMLGJvZHk6e3NjaGVtYTplLHJlc291cmNlOnR9fTtyZXR1cm4gbmV3IGlbImRlZmF1bHQiXShmdW5jdGlvbihvLGkpe3IuX2J1cy5wb3N0TWVzc2FnZShuLGZ1bmN0aW9uKG4pe2NvbnNvbGUubG9nKCJzdWJzY3JpYmUtcmVzcG9uc2U6ICIsbik7dmFyIHM9ci5fcHJvdmlzaW9uYWxzW3RdO2lmKGRlbGV0ZSByLl9wcm92aXNpb25hbHNbdF0scyYmcy5fcmVsZWFzZUxpc3RlbmVycygpLG4uYm9keS5jb2RlPDIwMClzPW5ldyBiWyJkZWZhdWx0Il0oci5fb3duZXIsdCxyLl9idXMsbi5ib2R5LmNoaWxkcmVuUmVzb3VyY2VzKSxyLl9wcm92aXNpb25hbHNbdF09cztlbHNlIGlmKDIwMD09PW4uYm9keS5jb2RlKXt2YXIgYz1uZXcgcFsiZGVmYXVsdCJdKHIsdCxlLCJvbiIsbi5ib2R5LnZhbHVlLHMuY2hpbGRyZW4sbi5ib2R5LnZlcnNpb24pO3IuX29ic2VydmVyc1t0XT1jLG8oYykscy5hcHBseShjKX1lbHNlIGkobi5ib2R5LmRlc2MpfSl9KX19LHtrZXk6Im9uTm90aWZpY2F0aW9uIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vbk5vdGlmaWNhdGlvbkhhbmRsZXI9ZX19LHtrZXk6Il9vbkZvcndhcmQiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj10Ll9yZXBvcnRlcnNbZS5ib2R5LnRvXTtyLl9vbkZvcndhcmQoZSl9fSx7a2V5OiJfb25SZW1vdGVDcmVhdGUiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj1lLmZyb20uc2xpY2UoMCwtMTMpLG49e3R5cGU6ZS50eXBlLGZyb206ZS5ib2R5LnNvdXJjZSx1cmw6cixzY2hlbWE6ZS5ib2R5LnNjaGVtYSx2YWx1ZTplLmJvZHkudmFsdWUsaWRlbnRpdHk6ZS5ib2R5LmlkZW50aXR5LGFjazpmdW5jdGlvbihyKXt2YXIgbj0yMDA7ciYmKG49ciksdC5fYnVzLnBvc3RNZXNzYWdlKHtpZDplLmlkLHR5cGU6InJlc3BvbnNlIixmcm9tOmUudG8sdG86ZS5mcm9tLGJvZHk6e2NvZGU6bn19KX19O3QuX29uTm90aWZpY2F0aW9uSGFuZGxlciYmKGNvbnNvbGUubG9nKCJOT1RJRklDQVRJT04tRVZFTlQ6ICIsbiksdC5fb25Ob3RpZmljYXRpb25IYW5kbGVyKG4pKX19LHtrZXk6Il9vblJlbW90ZURlbGV0ZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPWUuYm9keS5yZXNvdXJjZSxuPXQuX29ic2VydmVyc1tyXTtpZihuKXt2YXIgbz17dHlwZTplLnR5cGUsdXJsOnIsaWRlbnRpdHk6ZS5ib2R5LmlkZW50aXR5LGFjazpmdW5jdGlvbihyKXt2YXIgbz0yMDA7ciYmKG89ciksMjAwPT09byYmblsiZGVsZXRlIl0oKSx0Ll9idXMucG9zdE1lc3NhZ2Uoe2lkOmUuaWQsdHlwZToicmVzcG9uc2UiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZTpvLHNvdXJjZTp0Ll9vd25lcn19KX19O3QuX29uTm90aWZpY2F0aW9uSGFuZGxlciYmKGNvbnNvbGUubG9nKCJOT1RJRklDQVRJT04tRVZFTlQ6ICIsbyksdC5fb25Ob3RpZmljYXRpb25IYW5kbGVyKG8pKX1lbHNlIHQuX2J1cy5wb3N0TWVzc2FnZSh7aWQ6ZS5pZCx0eXBlOiJyZXNwb25zZSIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOjQwNCxzb3VyY2U6dC5fb3duZXJ9fSl9fSx7a2V5OiJvd25lciIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX293bmVyfX0se2tleToicmVwb3J0ZXJzIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmVwb3J0ZXJzfX0se2tleToib2JzZXJ2ZXJzIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fb2JzZXJ2ZXJzfX1dKSxlfSgpO3JbImRlZmF1bHQiXT1oLHQuZXhwb3J0cz1yWyJkZWZhdWx0Il19LHsiLi9EYXRhT2JqZWN0T2JzZXJ2ZXIiOjExOCwiLi9EYXRhT2JqZWN0UmVwb3J0ZXIiOjExOSwiLi9EYXRhUHJvdmlzaW9uYWwiOjEyMCwiYmFiZWwtcnVudGltZS9jb3JlLWpzL3Byb21pc2UiOjksImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayI6MTIsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyI6MTN9XSwxMjM6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6eyJkZWZhdWx0IjplfX1mdW5jdGlvbiBvKGUpe3ZhciB0PS8oW2EtekEtWi1dKik6XC9cLyg/OlwuKT8oWy1hLXpBLVowLTlAOiUuX1wrfiM9XXsyLDI1Nn0pKFstYS16QS1aMC05QDolLl9cK34jPVwvXSopL2dpLHI9IiQxLCQyLCQzIixuPWUucmVwbGFjZSh0LHIpLnNwbGl0KCIsIik7blswXT09PWUmJihuWzBdPSJodHRwcyIsblsxXT1lKTt2YXIgbz17dHlwZTpuWzBdLGRvbWFpbjpuWzFdLGlkZW50aXR5Om5bMl19O3JldHVybiBvfWZ1bmN0aW9uIGkoZSl7cmV0dXJuIGU/SlNPTi5wYXJzZSgoMCxjWyJkZWZhdWx0Il0pKGUpKTp2b2lkIDB9T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBzPWUoImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9qc29uL3N0cmluZ2lmeSIpLGM9bihzKTtyLmRpdmlkZVVSTD1vLHIuZGVlcENsb25lPWl9LHsiYmFiZWwtcnVudGltZS9jb3JlLWpzL2pzb24vc3RyaW5naWZ5IjoyfV19LHt9LFsxMTVdKSgxMTUpfSk7Cn0pLmNhbGwodGhpcyx0eXBlb2YgZ2xvYmFsICE9PSAidW5kZWZpbmVkIiA/IGdsb2JhbCA6IHR5cGVvZiBzZWxmICE9PSAidW5kZWZpbmVkIiA/IHNlbGYgOiB0eXBlb2Ygd2luZG93ICE9PSAidW5kZWZpbmVkIiA/IHdpbmRvdyA6IHt9KQp9LHt9XSwzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKInVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwoKdmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmICgidmFsdWUiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7CgpmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpOyB9IH0KCi8qKg0KKiBDb3B5cmlnaHQgMjAxNiBQVCBJbm92YcOnw6NvIGUgU2lzdGVtYXMgU0ENCiogQ29weXJpZ2h0IDIwMTYgSU5FU0MtSUQNCiogQ29weXJpZ2h0IDIwMTYgUVVPQklTIE5FVFdPUktTIFNMDQoqIENvcHlyaWdodCAyMDE2IEZSQVVOSE9GRVItR0VTRUxMU0NIQUZUIFpVUiBGT0VSREVSVU5HIERFUiBBTkdFV0FORFRFTiBGT1JTQ0hVTkcgRS5WDQoqIENvcHlyaWdodCAyMDE2IE9SQU5HRSBTQQ0KKiBDb3B5cmlnaHQgMjAxNiBEZXV0c2NoZSBUZWxla29tIEFHDQoqIENvcHlyaWdodCAyMDE2IEFwaXplZQ0KKiBDb3B5cmlnaHQgMjAxNiBURUNITklTQ0hFIFVOSVZFUlNJVEFUIEJFUkxJTg0KKg0KKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsNCiogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLg0KKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQNCioNCiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjANCioNCiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQ0KKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLA0KKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4NCiogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZA0KKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4NCioqLwoKLyoqDQogKiBFdmVudEVtaXR0ZXINCiAqIEFsbCBjbGFzc2VzIHdoaWNoIGV4dGVuZHMgdGhpcywgY2FuIGhhdmUgYWRkRXZlbnRMaXN0ZW5lciBhbmQgdHJpZ2dlciBldmVudHM7DQogKi8KCnZhciBFdmVudEVtaXR0ZXIgPSBmdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gRXZlbnRFbWl0dGVyKCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEV2ZW50RW1pdHRlcik7CiAgfQoKICBfY3JlYXRlQ2xhc3MoRXZlbnRFbWl0dGVyLCBbewogICAga2V5OiAiYWRkRXZlbnRMaXN0ZW5lciIsCgoKICAgIC8qKg0KICAgICAqIGFkZEV2ZW50TGlzdGVuZXIgbGlzdGVuIGZvciBhbiBldmVudFR5cGUNCiAgICAgKiBAcGFyYW0gIHtzdHJpbmd9ICAgICAgICAgZXZlbnRUeXBlIC0gbGlzdGVuaW5nIGZvciB0aGlzIHR5cGUgb2YgZXZlbnQNCiAgICAgKiBAcGFyYW0gIHtGdW5jdGlvbn0gICAgICAgY2IgICAgICAgIC0gY2FsbGJhY2sgZnVuY3Rpb24gd2lsbCBiZSBleGVjdXRlZCB3aGVuIHRoZSBldmVudCBpdCBpcyBpbnZva2VkDQogICAgICovCiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGNiKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CiAgICAgIF90aGlzW2V2ZW50VHlwZV0gPSBjYjsKICAgIH0KCiAgICAvKioNCiAgICAgKiBJbnZva2UgdGhlIGV2ZW50VHlwZQ0KICAgICAqIEBwYXJhbSAge3N0cmluZ30gZXZlbnRUeXBlIC0gZXZlbnQgd2lsbCBiZSBpbnZva2VkDQogICAgICogQHBhcmFtICB7b2JqZWN0fSBwYXJhbXMgLSBwYXJhbWV0ZXJzIHdpbGwgYmUgcGFzc2VkIHRvIHRoZSBhZGRFdmVudExpc3RlbmVyDQogICAgICovCgogIH0sIHsKICAgIGtleTogInRyaWdnZXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHRyaWdnZXIoZXZlbnRUeXBlLCBwYXJhbXMpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGlmIChfdGhpc1tldmVudFR5cGVdKSB7CiAgICAgICAgX3RoaXNbZXZlbnRUeXBlXShwYXJhbXMpOwogICAgICB9CiAgICB9CiAgfV0pOwoKICByZXR1cm4gRXZlbnRFbWl0dGVyOwp9KCk7CgpleHBvcnRzLmRlZmF1bHQgPSBFdmVudEVtaXR0ZXI7Cm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOwoKfSx7fV0sNDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Cid1c2Ugc3RyaWN0JzsKCk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy5kaXZpZGVVUkwgPSBkaXZpZGVVUkw7CmV4cG9ydHMuZGVlcENsb25lID0gZGVlcENsb25lOwpleHBvcnRzLmdldENvbmZpZyA9IGdldENvbmZpZzsKZXhwb3J0cy5nZXRVc2VyTWVkaWEgPSBnZXRVc2VyTWVkaWE7CmV4cG9ydHMuc2VyaWFsaXplID0gc2VyaWFsaXplOwpleHBvcnRzLmdldFRlbXBsYXRlID0gZ2V0VGVtcGxhdGU7Ci8qKg0KICogQ29weXJpZ2h0IDIwMTYgUFQgSW5vdmHDp8OjbyBlIFNpc3RlbWFzIFNBDQogKiBDb3B5cmlnaHQgMjAxNiBJTkVTQy1JRA0KICogQ29weXJpZ2h0IDIwMTYgUVVPQklTIE5FVFdPUktTIFNMDQogKiBDb3B5cmlnaHQgMjAxNiBGUkFVTkhPRkVSLUdFU0VMTFNDSEFGVCBaVVIgRk9FUkRFUlVORyBERVIgQU5HRVdBTkRURU4gRk9SU0NIVU5HIEUuVg0KICogQ29weXJpZ2h0IDIwMTYgT1JBTkdFIFNBDQogKiBDb3B5cmlnaHQgMjAxNiBEZXV0c2NoZSBUZWxla29tIEFHDQogKiBDb3B5cmlnaHQgMjAxNiBBcGl6ZWUNCiAqIENvcHlyaWdodCAyMDE2IFRFQ0hOSVNDSEUgVU5JVkVSU0lUQVQgQkVSTElODQogKg0KICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7DQogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuDQogKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQNCiAqDQogKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMA0KICoNCiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUNCiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsDQogKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4NCiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQNCiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLg0KICoqLwoKLy8ganNoaW50IGJyb3dzZXI6dHJ1ZSwganF1ZXJ5OiB0cnVlCi8vIGpzaGludCB2YXJzdG10OiB0cnVlCi8qIGdsb2JhbCBIYW5kbGViYXJzICovCgovKioNCiAqIFN1cHBvcnQgbW9kdWxlIHdpdGggc29tZSBmdW5jdGlvbnMgd2lsbCBiZSB1c2VmdWwNCiAqIEBtb2R1bGUgdXRpbHMNCiAqLwoKLyoqDQogKiBAdHlwZWRlZiBkaXZpZGVVUkwNCiAqIEB0eXBlIE9iamVjdA0KICogQHByb3BlcnR5IHtzdHJpbmd9IHR5cGUgVGhlIHR5cGUgb2YgVVJMDQogKiBAcHJvcGVydHkge3N0cmluZ30gZG9tYWluIFRoZSBkb21haW4gb2YgVVJMDQogKiBAcHJvcGVydHkge3N0cmluZ30gaWRlbnRpdHkgVGhlIGlkZW50aXR5IG9mIFVSTA0KICovCgovKioNCiAqIERpdmlkZSBhbiB1cmwgaW4gdHlwZSwgZG9tYWluIGFuZCBpZGVudGl0eQ0KICogQHBhcmFtICB7VVJMLlVSTH0gdXJsIC0gdXJsIGFkZHJlc3MNCiAqIEByZXR1cm4ge2RpdmlkZVVSTH0gdGhlIHJlc3VsdCBvZiBkaXZpZGVVUkwNCiAqLwpmdW5jdGlvbiBkaXZpZGVVUkwodXJsKSB7CgogIC8vIGxldCByZSA9IC8oW2EtekEtWi1dKik/OlwvXC8oPzpcLik/KFstYS16QS1aMC05QDolLl9cK34jPV17MiwyNTZ9XC5bYS16XXsyLDZ9XGIpKihcL1tcL1xkXHdcLi1dKikqKD86W1w/XSkqKC4rKSovZ2k7CiAgdmFyIHJlID0gLyhbYS16QS1aLV0qKTpcL1wvKD86XC4pPyhbLWEtekEtWjAtOUA6JS5fXCt+Iz1dezIsMjU2fSkoWy1hLXpBLVowLTlAOiUuX1wrfiM9XC9dKikvZ2k7CiAgdmFyIHN1YnN0ID0gJyQxLCQyLCQzJzsKICB2YXIgcGFydHMgPSB1cmwucmVwbGFjZShyZSwgc3Vic3QpLnNwbGl0KCcsJyk7CgogIC8vIElmIHRoZSB1cmwgaGFzIG5vIHByb3RvY29sLCB0aGUgZGVmYXVsdCBwcm90b2NvbCBzZXQgaXMgaHR0cHMKICBpZiAocGFydHNbMF0gPT09IHVybCkgewogICAgcGFydHNbMF0gPSAnaHR0cHMnOwogICAgcGFydHNbMV0gPSB1cmw7CiAgfQoKICB2YXIgcmVzdWx0ID0gewogICAgdHlwZTogcGFydHNbMF0sCiAgICBkb21haW46IHBhcnRzWzFdLAogICAgaWRlbnRpdHk6IHBhcnRzWzJdCiAgfTsKCiAgcmV0dXJuIHJlc3VsdDsKfQoKLyoqDQogKiBNYWtlIGEgQ09QWSBvZiB0aGUgb3JpZ2luYWwgZGF0YQ0KICogQHBhcmFtICB7T2JqZWN0fSAgb2JqIC0gb2JqZWN0IHRvIGJlIGNsb25lZA0KICogQHJldHVybiB7T2JqZWN0fQ0KICovCmZ1bmN0aW9uIGRlZXBDbG9uZShvYmopIHsKICAvL1RPRE86IHNpbXBsZSBidXQgaW5lZmZpY2llbnQgSlNPTiBkZWVwIGNsb25lLi4uCiAgaWYgKG9iaikgcmV0dXJuIEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkob2JqKSk7Cn0KCi8qKg0KICogR2V0IHRoZSBjb25maWd1cmF0aW9uIGZyb20gYW4ganNvbiBmaWxlOw0KICogQHBhcmFtICB7SlNPTk9iamVjdH0ganNvbkZpbGUNCiAqIEByZXR1cm4ge29iamVjdH0NCiAqLwpmdW5jdGlvbiBnZXRDb25maWcoSlNPTk9iamVjdCkgewogIGNvbnNvbGUubG9nKCdkZXZlbG9wbWVudCcpOwogIHJldHVybiBKU09OT2JqZWN0WydkZXZlbG9wbWVudCddOwp9CgovKioNCiAqIEdldCBXZWJSVEMgQVBJIHJlc291cmNlcw0KICogQHBhcmFtICB7T2JqZWN0fSAgICAgb3B0aW9ucyBPYmplY3QgY29udGFpbmluZyB0aGUgaW5mb3JtYXRpb24gdGhhdCByZXNvdXJjZXMgd2lsbCBiZSB1c2VkIChjYW1lcmEsIG1pYywgcmVzb2x1dGlvbiwgZXRjKTsNCiAqIEByZXR1cm4ge1Byb21pc2V9DQogKi8KZnVuY3Rpb24gZ2V0VXNlck1lZGlhKGNvbnN0cmFpbnRzKSB7CgogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CgogICAgbmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWEoY29uc3RyYWludHMpLnRoZW4oZnVuY3Rpb24gKG1lZGlhU3RyZWFtKSB7CiAgICAgIHJlc29sdmUobWVkaWFTdHJlYW0pOwogICAgfSkuY2F0Y2goZnVuY3Rpb24gKHJlYXNvbikgewogICAgICByZWplY3QocmVhc29uKTsKICAgIH0pOwogIH0pOwp9CgpmdW5jdGlvbiBzZXJpYWxpemUoKSB7CgogICQuZm4uc2VyaWFsaXplT2JqZWN0ID0gZnVuY3Rpb24gKCkgewogICAgdmFyIG8gPSB7fTsKICAgIHZhciBhID0gdGhpcy5zZXJpYWxpemVBcnJheSgpOwogICAgJC5lYWNoKGEsIGZ1bmN0aW9uICgpIHsKICAgICAgaWYgKG9bdGhpcy5uYW1lXSAhPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgaWYgKCFvW3RoaXMubmFtZV0ucHVzaCkgewogICAgICAgICAgb1t0aGlzLm5hbWVdID0gW29bdGhpcy5uYW1lXV07CiAgICAgICAgfQoKICAgICAgICBvW3RoaXMubmFtZV0ucHVzaCh0aGlzLnZhbHVlIHx8ICcnKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBvW3RoaXMubmFtZV0gPSB0aGlzLnZhbHVlIHx8ICcnOwogICAgICB9CiAgICB9KTsKCiAgICByZXR1cm4gbzsKICB9OwoKICAkLmZuLnNlcmlhbGl6ZU9iamVjdEFycmF5ID0gZnVuY3Rpb24gKCkgewogICAgdmFyIG8gPSB7fTsKICAgIHZhciBhID0gdGhpcy5zZXJpYWxpemVBcnJheSgpOwogICAgJC5lYWNoKGEsIGZ1bmN0aW9uICgpIHsKICAgICAgaWYgKG9bdGhpcy5uYW1lXSAhPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgaWYgKCFvW3RoaXMubmFtZV0ucHVzaCkgewogICAgICAgICAgb1t0aGlzLm5hbWVdID0gW29bdGhpcy5uYW1lXV07CiAgICAgICAgfQoKICAgICAgICBvW3RoaXMubmFtZV0ucHVzaCh0aGlzLnZhbHVlIHx8ICcnKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBpZiAoIW9bdGhpcy5uYW1lXSkgb1t0aGlzLm5hbWVdID0gW107CiAgICAgICAgb1t0aGlzLm5hbWVdLnB1c2godGhpcy52YWx1ZSB8fCAnJyk7CiAgICAgIH0KICAgIH0pOwoKICAgIHJldHVybiBvOwogIH07Cn0KCmZ1bmN0aW9uIGdldFRlbXBsYXRlKHBhdGgsIHNjcmlwdCkgewoKICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewoKICAgIGlmIChIYW5kbGViYXJzLnRlbXBsYXRlcyA9PT0gdW5kZWZpbmVkIHx8IEhhbmRsZWJhcnMudGVtcGxhdGVzW25hbWVdID09PSB1bmRlZmluZWQpIHsKICAgICAgSGFuZGxlYmFycy50ZW1wbGF0ZXMgPSB7fTsKICAgIH0gZWxzZSB7CiAgICAgIHJlc29sdmUoSGFuZGxlYmFycy50ZW1wbGF0ZXNbbmFtZV0pOwogICAgfQoKICAgIHZhciB0ZW1wbGF0ZUZpbGUgPSAkLmFqYXgoewogICAgICB1cmw6IHBhdGggKyAnLmhicycsCiAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIHN1Y2Nlc3MoZGF0YSkgewogICAgICAgIEhhbmRsZWJhcnMudGVtcGxhdGVzW25hbWVdID0gSGFuZGxlYmFycy5jb21waWxlKGRhdGEpOwogICAgICB9LAoKICAgICAgZmFpbDogZnVuY3Rpb24gZmFpbChyZWFzb24pIHsKICAgICAgICByZXR1cm4gcmVhc29uOwogICAgICB9CiAgICB9KTsKCiAgICB2YXIgc2NyaXB0RmlsZSA9ICQuZ2V0U2NyaXB0KHNjcmlwdCk7CgogICAgdmFyIHJlcXVlc3RzID0gW107CiAgICBpZiAocGF0aCkgcmVxdWVzdHMucHVzaCh0ZW1wbGF0ZUZpbGUpOwogICAgaWYgKHNjcmlwdCkgcmVxdWVzdHMucHVzaChzY3JpcHRGaWxlKTsKCiAgICBQcm9taXNlLmFsbChyZXF1ZXN0cykudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7CiAgICAgIHJlc29sdmUoSGFuZGxlYmFycy50ZW1wbGF0ZXNbbmFtZV0pOwogICAgfSkuY2F0Y2goZnVuY3Rpb24gKHJlYXNvbikgewogICAgICByZWplY3QocmVhc29uKTsKICAgIH0pOwogIH0pOwp9Cgp9LHt9XX0se30sWzFdKSgxKQp9KTs=",
      "sourceCodeClassname": "HelloWorldObserver",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10002,
    "type": "Hyperties",
    "version": "0.1",
    "description": "Description of HelloWorldObserver",
    "objectName": "HelloWorldObserver",
    "configuration": {},
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  },
  "HelloWorldReporter": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "HelloWorldReporter",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10003,
    "type": "Hyperties",
    "version": "0.1",
    "description": "Description of HelloWorldReporter",
    "objectName": "HelloWorldReporter",
    "configuration": {},
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  },
  "HypertyChat": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "HypertyChat",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10004,
    "type": "Hyperties",
    "version": "0.1",
    "description": "Description of HypertyChat",
    "objectName": "HypertyChat",
    "configuration": {},
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  },
  "BraceletSensorObserver": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "BraceletSensorObserver",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10005,
    "type": "Hyperties",
    "version": "0.1",
    "description": "Description of BraceletSensorObserver",
    "objectName": "BraceletSensorObserver",
    "configuration": {},
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  },
  "BraceletSensorReporter": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "BraceletSensorReporter",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10006,
    "type": "Hyperties",
    "version": "0.1",
    "description": "Description of BraceletSensorReporter",
    "objectName": "BraceletSensorReporter",
    "configuration": {},
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  }
}